/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Creator;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author EricGummerson
 */
public class NameGeneratorPanel extends javax.swing.JPanel {

    public MainFrame mf;
    private Scanner scan;
    public IoNames ioNames;
    private List<DefaultTableModel> tableModels;

    /**
     * Creates new form NameGeneratorPanel
     *
     * @param mf
     * @param ioNames
     */
    public NameGeneratorPanel(MainFrame mf, IoNames ioNames) {
        this.mf = mf;
        this.ioNames = ioNames;
        initComponents();

        // Add table selection listener
        _Table_Items.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {

                    int row = _Table_Items.getSelectedRow();
                    if (row > -1) {
                        int cols = _Table_Items.getModel().getColumnCount();
                        String[] vals = new String[cols];
                        for (int i = 0; i < cols; i++) {
                            vals[i] = (String) _Table_Items.getValueAt(row, i);
                            if (vals[i] == null) {
                                vals[i] = "";
                            }
                        }

                        loadItem(vals);
                    }
                }
            }
        });
    }

    public IoNames getIoNames() {
        return ioNames;
    }

    public void setIoNames(IoNames ioNames) {
        this.ioNames = ioNames;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        _ButtonGroup_LogType = new javax.swing.ButtonGroup();
        _Panel_SelectedItemInfo = new javax.swing.JPanel();
        _Textfield_Name = new javax.swing.JTextField();
        _Label_name = new javax.swing.JLabel();
        _Label_type = new javax.swing.JLabel();
        _FTF_DisplayedValue = new javax.swing.JFormattedTextField();
        _ComboBox_Type = new javax.swing.JComboBox();
        _Label_valueDisplayed = new javax.swing.JLabel();
        _Label_uom = new javax.swing.JLabel();
        _TextField_UoM = new javax.swing.JTextField();
        _Label_constant = new javax.swing.JLabel();
        _FTF_Constant = new javax.swing.JFormattedTextField();
        _Label_offset = new javax.swing.JLabel();
        _FTF_Offset = new javax.swing.JFormattedTextField();
        _Label_constant1 = new javax.swing.JLabel();
        _FTF_AlertLow = new javax.swing.JFormattedTextField();
        _Label_alertHigh = new javax.swing.JLabel();
        _FTF_AlertHigh = new javax.swing.JFormattedTextField();
        _Label_Alert = new javax.swing.JLabel();
        _CheckBox_Alert = new javax.swing.JCheckBox();
        _Button_SaveSelected = new javax.swing.JButton();
        _Button_NewName = new javax.swing.JButton();
        _FTF_DecimalPlaces = new javax.swing.JFormattedTextField();
        _Label_decimalPlaces = new javax.swing.JLabel();
        _ComboBox_LogType = new javax.swing.JComboBox();
        _Label_LogParam = new javax.swing.JLabel();
        _FTF_LogParam1 = new javax.swing.JFormattedTextField();
        _RadioButton_Avg = new javax.swing.JRadioButton();
        _RadioButton_Max = new javax.swing.JRadioButton();
        _RadioButton_Min = new javax.swing.JRadioButton();
        _Label_LogParam1 = new javax.swing.JLabel();
        _Label_LogTimeDays = new javax.swing.JLabel();
        _Label_LogTimeMonth = new javax.swing.JLabel();
        _FTF_LogTimeMonth = new javax.swing.JFormattedTextField();
        _Label_LogTimeYear = new javax.swing.JLabel();
        _FTF_LogTimeYear = new javax.swing.JFormattedTextField();
        _Label_LogTime = new javax.swing.JLabel();
        _FTF_LogTimeDay = new javax.swing.JFormattedTextField();
        _Label_constant2 = new javax.swing.JLabel();
        _FTF_AlertTimeDelay = new javax.swing.JFormattedTextField();
        _ComboBox_Groups = new javax.swing.JComboBox();
        _Button_SaveUserDefaults = new javax.swing.JButton();
        _Button_SaveAllIoNames = new javax.swing.JButton();
        _Button_LoadUserDefaults = new javax.swing.JButton();
        _Button_LoadProgramDefaults = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        _Table_Items = new javax.swing.JTable();

        setMinimumSize(new java.awt.Dimension(972, 555));

        _Textfield_Name.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Textfield_Name.setText("IO Name");
        _Textfield_Name.setToolTipText("io_name Field");

        _Label_name.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_name.setText("Name");

        _Label_type.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_type.setText("Type");

        _FTF_DisplayedValue.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        _FTF_DisplayedValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_DisplayedValue.setText("1");
        _FTF_DisplayedValue.setToolTipText("io_value_displayed Field");
        _FTF_DisplayedValue.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _ComboBox_Type.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _ComboBox_Type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Digital Input", "Analog Input", "Digital Output", "Analog Output" }));
        _ComboBox_Type.setToolTipText("io_type Field");
        _ComboBox_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_TypeActionPerformed(evt);
            }
        });

        _Label_valueDisplayed.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_valueDisplayed.setText("Displayed");

        _Label_uom.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_uom.setText("UoM");

        _TextField_UoM.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _TextField_UoM.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _TextField_UoM.setText("A");
        _TextField_UoM.setToolTipText("io_unit_of_measure Field");

        _Label_constant.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_constant.setText("Constant");

        _FTF_Constant.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        _FTF_Constant.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_Constant.setText("1");
        _FTF_Constant.setToolTipText("io_constant Field");
        _FTF_Constant.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_offset.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_offset.setText("Offset");

        _FTF_Offset.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        _FTF_Offset.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_Offset.setText("0");
        _FTF_Offset.setToolTipText("io_offset Field");
        _FTF_Offset.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_constant1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_constant1.setText("Alert Range Low");

        _FTF_AlertLow.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        _FTF_AlertLow.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_AlertLow.setText("0");
        _FTF_AlertLow.setToolTipText("io_alert_range_low Field");
        _FTF_AlertLow.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_alertHigh.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_alertHigh.setText("Alert Range High");

        _FTF_AlertHigh.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        _FTF_AlertHigh.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_AlertHigh.setText("0");
        _FTF_AlertHigh.setToolTipText("io_alert_range_high Field");
        _FTF_AlertHigh.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_Alert.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_Alert.setText("Alert");

        _CheckBox_Alert.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _CheckBox_Alert.setText("No");
        _CheckBox_Alert.setToolTipText("io_alert field, check to generate alerts");
        _CheckBox_Alert.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _CheckBox_Alert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _CheckBox_AlertActionPerformed(evt);
            }
        });

        _Button_SaveSelected.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Button_SaveSelected.setText("Save");
        _Button_SaveSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_SaveSelectedActionPerformed(evt);
            }
        });

        _Button_NewName.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Button_NewName.setText("New");
        _Button_NewName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_NewNameActionPerformed(evt);
            }
        });

        _FTF_DecimalPlaces.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        _FTF_DecimalPlaces.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_DecimalPlaces.setText("2");
        _FTF_DecimalPlaces.setToolTipText("io_num_digits Field");
        _FTF_DecimalPlaces.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_decimalPlaces.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_decimalPlaces.setText("Decimal Places");

        _ComboBox_LogType.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _ComboBox_LogType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Always Log", "Inc Value", "Inc Speed", "Periodic", "Periodic Calculation" }));
        _ComboBox_LogType.setToolTipText("io_log type");
        _ComboBox_LogType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_LogTypeActionPerformed(evt);
            }
        });

        _Label_LogParam.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_LogParam.setText("Log Parameter");

        _FTF_LogParam1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        _FTF_LogParam1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_LogParam1.setText("0");
        _FTF_LogParam1.setToolTipText("io_alert_range_low Field");
        _FTF_LogParam1.setEnabled(false);
        _FTF_LogParam1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _ButtonGroup_LogType.add(_RadioButton_Avg);
        _RadioButton_Avg.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _RadioButton_Avg.setText("Average");
        _RadioButton_Avg.setEnabled(false);
        _RadioButton_Avg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _RadioButton_AvgActionPerformed(evt);
            }
        });

        _ButtonGroup_LogType.add(_RadioButton_Max);
        _RadioButton_Max.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _RadioButton_Max.setText("Max");
        _RadioButton_Max.setEnabled(false);
        _RadioButton_Max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _RadioButton_MaxActionPerformed(evt);
            }
        });

        _ButtonGroup_LogType.add(_RadioButton_Min);
        _RadioButton_Min.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _RadioButton_Min.setText("Min");
        _RadioButton_Min.setEnabled(false);
        _RadioButton_Min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _RadioButton_MinActionPerformed(evt);
            }
        });

        _Label_LogParam1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        _Label_LogParam1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_LogParam1.setText("Data Logging");

        _Label_LogTimeDays.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_LogTimeDays.setText("Days");

        _Label_LogTimeMonth.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_LogTimeMonth.setText("Months");

        _FTF_LogTimeMonth.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        _FTF_LogTimeMonth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_LogTimeMonth.setText("0");
        _FTF_LogTimeMonth.setToolTipText("Number of months");
        _FTF_LogTimeMonth.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_LogTimeYear.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_LogTimeYear.setText("Years");

        _FTF_LogTimeYear.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        _FTF_LogTimeYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_LogTimeYear.setText("0");
        _FTF_LogTimeYear.setToolTipText("number of years");
        _FTF_LogTimeYear.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_LogTime.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_LogTime.setText("Log Time Frame");

        _FTF_LogTimeDay.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        _FTF_LogTimeDay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_LogTimeDay.setText("0");
        _FTF_LogTimeDay.setToolTipText("Number of days");
        _FTF_LogTimeDay.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_constant2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_constant2.setText("Alert Time Delay (s)");

        _FTF_AlertTimeDelay.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        _FTF_AlertTimeDelay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_AlertTimeDelay.setText("0");
        _FTF_AlertTimeDelay.setToolTipText("io_alert_timeout");
        _FTF_AlertTimeDelay.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _ComboBox_Groups.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _ComboBox_Groups.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Store", "Rack", "Condenser", "Suction Group", "Compressor", "System", "Other" }));
        _ComboBox_Groups.setToolTipText("Groups");
        _ComboBox_Groups.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_GroupsActionPerformed(evt);
            }
        });

        _Button_SaveUserDefaults.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Button_SaveUserDefaults.setText("Save User Defaults");
        _Button_SaveUserDefaults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_SaveUserDefaultsActionPerformed(evt);
            }
        });

        _Button_SaveAllIoNames.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Button_SaveAllIoNames.setText("Save All Variables");
        _Button_SaveAllIoNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_SaveAllIoNamesActionPerformed(evt);
            }
        });

        _Button_LoadUserDefaults.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Button_LoadUserDefaults.setText("Load User Defaults");
        _Button_LoadUserDefaults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_LoadUserDefaultsActionPerformed(evt);
            }
        });

        _Button_LoadProgramDefaults.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Button_LoadProgramDefaults.setText("Load Program Defaults");
        _Button_LoadProgramDefaults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_LoadProgramDefaultsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout _Panel_SelectedItemInfoLayout = new javax.swing.GroupLayout(_Panel_SelectedItemInfo);
        _Panel_SelectedItemInfo.setLayout(_Panel_SelectedItemInfoLayout);
        _Panel_SelectedItemInfoLayout.setHorizontalGroup(
            _Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(_Label_decimalPlaces, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                    .addComponent(_Label_valueDisplayed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(_Label_uom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(_FTF_DisplayedValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_TextField_UoM, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .addComponent(_FTF_DecimalPlaces, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(_Label_constant, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(_Label_offset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(_FTF_Offset, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .addComponent(_FTF_Constant)))
                            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addComponent(_Label_type, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(_ComboBox_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(_Label_Alert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(_Label_alertHigh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(_Label_constant1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(_Label_constant2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(_FTF_AlertHigh, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .addComponent(_FTF_AlertTimeDelay)
                                    .addComponent(_FTF_AlertLow, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(_CheckBox_Alert, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(_ComboBox_LogType, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                    .addComponent(_RadioButton_Avg)
                                    .addGap(18, 18, 18)
                                    .addComponent(_RadioButton_Max)
                                    .addGap(11, 11, 11)
                                    .addComponent(_RadioButton_Min))
                                .addComponent(_Label_LogParam1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(_FTF_LogParam1)
                                    .addComponent(_Label_LogParam, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(_Label_LogTime, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                            .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(_Label_LogTimeMonth, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(_Label_LogTimeYear, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(_FTF_LogTimeMonth)
                                                .addComponent(_FTF_LogTimeYear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                            .addComponent(_Label_LogTimeDays, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(_FTF_LogTimeDay, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                        .addComponent(_Label_name, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_Textfield_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                        .addComponent(_Button_NewName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(_Button_SaveSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(_Button_SaveAllIoNames, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(_Button_SaveUserDefaults, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(_Button_LoadProgramDefaults, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(_Button_LoadUserDefaults, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(_ComboBox_Groups, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        _Panel_SelectedItemInfoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {_CheckBox_Alert, _FTF_AlertHigh, _FTF_AlertLow, _FTF_Constant, _FTF_Offset, _TextField_UoM});

        _Panel_SelectedItemInfoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {_Button_NewName, _Button_SaveSelected});

        _Panel_SelectedItemInfoLayout.setVerticalGroup(
            _Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_Label_name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_Textfield_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _Panel_SelectedItemInfoLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_Button_NewName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_Button_SaveSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _Panel_SelectedItemInfoLayout.createSequentialGroup()
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(_Label_Alert, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_CheckBox_Alert, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(_Label_constant2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_FTF_AlertTimeDelay, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_Label_constant1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_FTF_AlertLow, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_Label_alertHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_FTF_AlertHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_Label_type, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_ComboBox_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_Label_valueDisplayed, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_FTF_DisplayedValue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_Label_constant, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_FTF_Constant, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_Label_uom, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_TextField_UoM, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_Label_offset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_FTF_Offset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_Label_decimalPlaces, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_FTF_DecimalPlaces, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, _Panel_SelectedItemInfoLayout.createSequentialGroup()
                            .addComponent(_Label_LogParam1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(3, 3, 3)
                            .addComponent(_ComboBox_LogType, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(_RadioButton_Avg)
                                .addComponent(_RadioButton_Max)
                                .addComponent(_RadioButton_Min))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(_Label_LogParam, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(_Label_LogTime, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(_FTF_LogTimeDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(_Label_LogTimeDays)
                                .addComponent(_FTF_LogParam1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(_Label_LogTimeMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(_FTF_LogTimeMonth, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(_Label_LogTimeYear, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(_FTF_LogTimeYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, _Panel_SelectedItemInfoLayout.createSequentialGroup()
                            .addComponent(_Button_SaveAllIoNames, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(_Button_SaveUserDefaults, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(_Button_LoadUserDefaults, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(_Button_LoadProgramDefaults, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(_ComboBox_Groups, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(80, 80, 80))
        );

        _Panel_SelectedItemInfoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {_CheckBox_Alert, _FTF_AlertHigh, _FTF_AlertLow, _FTF_Constant, _FTF_DisplayedValue, _FTF_Offset, _Label_Alert, _Label_alertHigh, _Label_constant, _Label_constant1, _Label_offset, _Label_uom, _Label_valueDisplayed, _TextField_UoM});

        _Panel_SelectedItemInfoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {_FTF_LogTimeDay, _FTF_LogTimeMonth, _FTF_LogTimeYear, _Label_LogTimeDays, _Label_LogTimeMonth, _Label_LogTimeYear});

        _Table_Items.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Table_Items.setModel(getDefaultTableModel());
        _Table_Items.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        _Table_Items.setFillsViewportHeight(true);
        _Table_Items.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        _Table_Items.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(_Table_Items);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 978, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_Panel_SelectedItemInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(_Panel_SelectedItemInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void _ComboBox_GroupsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_GroupsActionPerformed

        _Table_Items.setModel(tableModels.get(_ComboBox_Groups.getSelectedIndex()));
    }//GEN-LAST:event__ComboBox_GroupsActionPerformed

    private void _Button_SaveAllIoNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_SaveAllIoNamesActionPerformed
        mf.updateVarNames(ioNames);

    }//GEN-LAST:event__Button_SaveAllIoNamesActionPerformed

    private void _Button_LoadProgramDefaultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_LoadProgramDefaultsActionPerformed
        loadGroups();
    }//GEN-LAST:event__Button_LoadProgramDefaultsActionPerformed

    private void _ComboBox_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_TypeActionPerformed

        if (_ComboBox_Type.getSelectedIndex() == 1 || _ComboBox_Type.getSelectedIndex() == 3) {
            boolean b = true;
            _FTF_DisplayedValue.setEnabled(b);
            _FTF_Constant.setEnabled(b);
            _FTF_Offset.setEnabled(b);
            _TextField_UoM.setEnabled(b);
            _FTF_DecimalPlaces.setEnabled(b);

        } else {
            boolean b = false;
            _FTF_DisplayedValue.setEnabled(b);
            _FTF_Constant.setEnabled(b);
            _FTF_Offset.setEnabled(b);
            _TextField_UoM.setEnabled(b);
            _FTF_DecimalPlaces.setEnabled(b);

        }
    }//GEN-LAST:event__ComboBox_TypeActionPerformed

    private void _CheckBox_AlertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__CheckBox_AlertActionPerformed

        if (_CheckBox_Alert.isSelected()) {
            _CheckBox_Alert.setText("Yes");
        } else {
            _CheckBox_Alert.setText("No");
        }
    }//GEN-LAST:event__CheckBox_AlertActionPerformed

    private void _Button_SaveSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_SaveSelectedActionPerformed

        int row = _Table_Items.getSelectedRow();

        if (row > -1) {

            //System.out.println("Type switch for: " + s);
            String[] values = new String[14];
            values[0] = _Textfield_Name.getText();
            values[1] = String.valueOf(_ComboBox_Type.getSelectedIndex());
            values[2] = _FTF_DisplayedValue.getText();
            values[3] = _TextField_UoM.getText();
            values[4] = _FTF_Constant.getText();
            values[5] = _FTF_Offset.getText();
            values[6] = _FTF_DecimalPlaces.getText();
            values[7] = _CheckBox_Alert.isSelected() ? "1" : "0";            
            values[8] = _FTF_AlertTimeDelay.getText();
            values[9] = _FTF_AlertLow.getText();
            values[10] = _FTF_AlertHigh.getText();
            values[11] = String.valueOf(_ComboBox_LogType.getSelectedIndex());
            values[12] = _FTF_LogParam1.getText();
            values[13] = getDateString();
            
            
            String newString = String.join(",", values);
            //System.out.println("values read: " + newString);
            ioNames.replaceString(_ComboBox_Groups.getSelectedIndex(), row, newString);
            updateRow(_ComboBox_Groups.getSelectedIndex(), row, values);

        }

    }//GEN-LAST:event__Button_SaveSelectedActionPerformed

    private void _Button_NewNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_NewNameActionPerformed

        String s = "New IO to be changed";
        ioNames.addString(_ComboBox_Groups.getSelectedIndex(), s);
        addRow(_ComboBox_Groups.getSelectedIndex(), s);


    }//GEN-LAST:event__Button_NewNameActionPerformed

    private void _ComboBox_LogTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_LogTypeActionPerformed

        switch (_ComboBox_LogType.getSelectedIndex()) {

            case 0: // none
                _FTF_LogParam1.setEnabled(false);
                _RadioButton_Avg.setEnabled(false);
                _RadioButton_Max.setEnabled(false);
                _RadioButton_Min.setEnabled(false);
                break;
            case 1: // always log
                _FTF_LogParam1.setEnabled(false);
                _RadioButton_Avg.setEnabled(false);
                _RadioButton_Max.setEnabled(false);
                _RadioButton_Min.setEnabled(false);
                break;

            case 2: // log increment value 
                _FTF_LogParam1.setEnabled(true);
                _RadioButton_Avg.setEnabled(false);
                _RadioButton_Max.setEnabled(false);
                _RadioButton_Min.setEnabled(false);
                break;

            case 3: // log increment speed
                _FTF_LogParam1.setEnabled(true);
                _RadioButton_Avg.setEnabled(false);
                _RadioButton_Max.setEnabled(false);
                _RadioButton_Min.setEnabled(false);
                break;
            case 4: // log periodic
                _FTF_LogParam1.setEnabled(false);
                _RadioButton_Avg.setEnabled(false);
                _RadioButton_Max.setEnabled(false);
                _RadioButton_Min.setEnabled(false);
                break;

            case 5: // log periodic calc - avg/min/max
                _FTF_LogParam1.setEnabled(false);
                _RadioButton_Avg.setEnabled(true);
                _RadioButton_Max.setEnabled(true);
                _RadioButton_Min.setEnabled(true);
                break;

        }
    }//GEN-LAST:event__ComboBox_LogTypeActionPerformed

    private void _RadioButton_AvgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__RadioButton_AvgActionPerformed
        _FTF_LogParam1.setText("1");
    }//GEN-LAST:event__RadioButton_AvgActionPerformed

    private void _RadioButton_MaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__RadioButton_MaxActionPerformed
        _FTF_LogParam1.setText("2");
    }//GEN-LAST:event__RadioButton_MaxActionPerformed

    private void _RadioButton_MinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__RadioButton_MinActionPerformed
        _FTF_LogParam1.setText("3");
    }//GEN-LAST:event__RadioButton_MinActionPerformed

    private void _Button_SaveUserDefaultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_SaveUserDefaultsActionPerformed

        //parseVarNames();
        mf.updateVarNames(ioNames);
        mf.saveDefaultIoNames(ioNames);
    }//GEN-LAST:event__Button_SaveUserDefaultsActionPerformed

    private void _Button_LoadUserDefaultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_LoadUserDefaultsActionPerformed

        IoNames names = mf.loadDefaultIoNames();
        if (names != null) {
            ioNames = null;
            ioNames = names;
            updateTable();
        }
    }//GEN-LAST:event__Button_LoadUserDefaultsActionPerformed

    public void parseDateString(String date) {

        _FTF_LogTimeDay.setText("");
        _FTF_LogTimeMonth.setText("");
        _FTF_LogTimeYear.setText("");

        if (!date.equals("")) {
            String[] vals = date.split(" ");
            System.out.println(Arrays.toString(vals));

            for (int i = 0; i < vals.length; i += 2) {
                if (vals[i + 1].equals("year") || vals[i + 1].equals("years")) {
                    _FTF_LogTimeYear.setText(vals[i]);
                } else if (vals[i + 1].equals("mon") || vals[i + 1].equals("mons")) {
                    _FTF_LogTimeMonth.setText(vals[i]);
                } else if (vals[i + 1].equals("day") || vals[i + 1].equals("days")) {
                    _FTF_LogTimeDay.setText(vals[i]);
                }
            }
        }
    }

    public String getDateString() {

        int day = Integer.parseInt(_FTF_LogTimeDay.getText());
        int month = Integer.parseInt(_FTF_LogTimeMonth.getText());
        int year = Integer.parseInt(_FTF_LogTimeYear.getText());
        String time = "";
        if (year > 0) {
            if (year > 5) {
                year = 5;
            }
            time += String.valueOf(year);
            if (year == 1) {
                time += " year ";
            } else {
                time += " years ";
            }
        }
        if (month > 0) {
            if (month > 12) {
                month = 12;
            }
            time += String.valueOf(month);
            if (month == 1) {
                time += " mon ";
            } else {
                time += " mons ";
            }
        }
        if (month > 0) {
            if (month > 12) {
                month = 12;
            }
            time += String.valueOf(month);
            if (month == 1) {
                time += " mon ";
            } else {
                time += " mons ";
            }
        }
        if (day > 0) {
            if (day > 350) {
                day = 350;
            }
            time += String.valueOf(day);
            if (day == 1) {
                time += " day";
            } else {
                time += " days";
            }
        }

        return time;

    }

    public void loadItem(String[] values) {

        String full = Arrays.toString(values).replace("[", "").replace("]", "");

        if (values[0].equals("New IO to be changed")) {
            _Textfield_Name.setText("New IO Name");
            _ComboBox_Type.setSelectedIndex(0);
            _FTF_DisplayedValue.setText("");
            _TextField_UoM.setText("");
            _FTF_Constant.setText("");
            _FTF_Offset.setText("");

            _CheckBox_Alert.setSelected(false);
            _CheckBox_Alert.setText("No");
            _FTF_AlertTimeDelay.setText("");
            _FTF_AlertLow.setText("");
            _FTF_AlertHigh.setText("");            
            _ComboBox_LogType.setSelectedIndex(0);
            _ButtonGroup_LogType.clearSelection();
            _FTF_LogParam1.setText("");

        } else {
            _Textfield_Name.setText(values[0]);
            _ComboBox_Type.setSelectedIndex(Integer.parseInt(values[1]));
            _FTF_DisplayedValue.setText(values[2]);
            _TextField_UoM.setText(values[3]);
            _FTF_Constant.setText(values[4]);
            _FTF_Offset.setText(values[5]);
            _FTF_DecimalPlaces.setText(values[6]);

            if (values[7].equals("1")) {
                _CheckBox_Alert.setSelected(true);
                _CheckBox_Alert.setText("Yes");
            } else {
                _CheckBox_Alert.setSelected(false);
                _CheckBox_Alert.setText("No");
            }            
            _FTF_AlertTimeDelay.setText(values[8]);
            _FTF_AlertLow.setText(values[9]);
            _FTF_AlertHigh.setText(values[10]);
            _ComboBox_LogType.setSelectedIndex(Integer.parseInt(values[11]));
            _FTF_LogParam1.setText(values[12]);
            parseDateString(values[13]);
            _ButtonGroup_LogType.clearSelection();
            if (values[11].endsWith("5")) {
                if (values[12].equals("1")) {
                    _RadioButton_Avg.setSelected(true);
                } else if (values[12].equals("2")) {
                    _RadioButton_Min.setSelected(true);
                } else if (values[12].equals("3")) {
                    _RadioButton_Max.setSelected(true);
                }
            }
        }

    }

    public void loadStore(IoNames ioNames) {
        this.ioNames = ioNames;
        updateTable();

    }

    public void loadGroups() {

        ioNames = new IoNames();

        tableModels = null;
        // Make new list of table models
        tableModels = new ArrayList<>();
        for (int i = 0; i < 7; i++) {
            tableModels.add(getDefaultTableModel());
        }

        String path = "/Creator/textFiles/Default IO Variables.txt";

        InputStream loc = this.getClass().getResourceAsStream(path);
        scan = new Scanner(loc);

        String line, groupName = "";
        while (scan.hasNextLine()) {
            line = scan.nextLine();
            line = formatString(line);

            if (line == null) { // make sure it doesnt break

            } else if (line.startsWith("`gn")) {
                groupName = line.substring(3).toLowerCase();

                //System.out.println("Grouping name: " + groupName);
            } else {
                switch (groupName) {
                    case "":
                        //System.out.println("No groupname line = " + line);
                        break;
                    case "store":
                        //System.out.println("Added to Store: " + line);
                        tableModels.get(0).addRow(line.split(","));
                        ioNames.getStoreStr().add(line);
                        break;
                    case "rack":
                        //System.out.println("Added to Rack: " + line);
                        tableModels.get(1).addRow(line.split(","));
                        ioNames.getRackStr().add(line);
                        break;
                    case "condenser":
                        tableModels.get(2).addRow(line.split(","));
                        //System.out.println("Added to Condenser: " + line);
                        ioNames.getCondStr().add(line);
                        break;
                    case "suction group":
                        tableModels.get(3).addRow(line.split(","));
                        //System.out.println("Added to SuctionGroup: " + line);
                        ioNames.getSgStr().add(line);
                        break;
                    case "compressor":
                        tableModels.get(4).addRow(line.split(","));
                        //System.out.println("Added to Compressor: " + line);
                        ioNames.getCompStr().add(line);
                        break;
                    case "system":
                        tableModels.get(5).addRow(line.split(","));
                        //System.out.println("Added to System: " + line);
                        ioNames.getSysStr().add(line);
                        break;
                    default:
                        //System.out.println("Unknown groupname, added to extra" + line);
                        tableModels.get(6).addRow(line.split(","));
                        ioNames.getExtraStr().add(line);
                        break;
                }
            }
        }

        if (scan != null) {
            scan.close();            
        }
        
        _Table_Items.setModel(tableModels.get(0));
        _ComboBox_Groups.setSelectedIndex(0);
        mf.updateVarNames(ioNames);

    }

    public void updateTable() {

        _Table_Items.setModel(getDefaultTableModel());
        tableModels = null;
        // Make new list of table models
        tableModels = new ArrayList<>();
        for (int i = 0; i < 7; i++) {
            tableModels.add(getDefaultTableModel());
        }

        // For each array add it to its model
        // Store strings
        for (String line : ioNames.getStoreStr()) {
            tableModels.get(0).addRow(line.split(","));
        }

        // Rack strings
        for (String line : ioNames.getRackStr()) {
            tableModels.get(1).addRow(line.split(","));
        }

        // Condenser strings
        for (String line : ioNames.getCondStr()) {
            tableModels.get(2).addRow(line.split(","));
        }

        // SG strings
        for (String line : ioNames.getSgStr()) {
            tableModels.get(3).addRow(line.split(","));
        }

        // Compressor strings
        for (String line : ioNames.getCompStr()) {
            tableModels.get(4).addRow(line.split(","));
        }

        // Systems strings
        for (String line : ioNames.getSysStr()) {
            tableModels.get(5).addRow(line.split(","));
        }

        // Extra strings
        for (String line : ioNames.getExtraStr()) {
            tableModels.get(6).addRow(line.split(","));
        }
        _Table_Items.setModel(tableModels.get(0));
    }

    public void addRow(int model, String s) {
        DefaultTableModel dm = tableModels.get(model);
        dm.addRow(new String[]{s});
    }

    public void updateRow(int model, int row, String[] values) {

        DefaultTableModel dm = tableModels.get(model);
        for (int col = 0; col < dm.getColumnCount(); col++) {
            dm.setValueAt(values[col], row, col);
        }
    }

    /**
     * formats a string input based on specific formating `name` indicates a
     * grouping `
     *
     * @param input
     * @return
     */
    public String formatVarString(String input) {
        String output;

        if (input.isEmpty()) {
            //System.out.println("Empty line");
            output = null;

        } else if (input.startsWith("\t")) {
            //System.out.println("Tab line");
            if (input.length() > 2) {
                input = input.substring(1);
                output = formatVarString(input);
            } else {
                output = null;
            }

        } else {
            output = input;
        }

        return output;

    }

    /**
     * formats a string input based on specific formating `name` indicates a
     * grouping `
     *
     * @param input
     * @return
     */
    public String formatString(String input) {
        String output;
        if (input.startsWith("`")) {
            // Make sure the follow character is not a % indicating a variable name
            if (input.charAt(1) != '%') {
                output = "`gn" + input.substring(1, input.length() - 1);

            } else {
                output = input;
            }
        } else if (input.isEmpty()) {
            //System.out.println("Empty line");
            output = null;

        } else if (input.startsWith("\t")) {
            //System.out.println("Tab line");
            if (input.length() > 2) {
                input = input.substring(1);
                output = formatString(input);
            } else {
                output = null;
            }

        } else {
            output = input;
        }

        return output;

    }

    public String getVarInfoStore() {
        String info = "";

        info += "Add store variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nEx. Outside Air Temp `%storename`"
                + "\nStore variables include:\n"
                + "%storename";

        return info;

    }

    public String getVarInfoRack() {
        String info = "";

        info += "Add rack variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nEx. Rack Status `%rackname`"
                + "\nRack variables include:\n"
                + "%storename\n%rackname\n";

        return info;

    }

    public String getVarInfoCond() {
        String info = "";

        info += "Add condenser variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nEx. Condenser Fan `%rackname` `%fannum`"
                + "\nCondenser variables include:\n"
                + "%storename\n%rackname\n%fannum\n";

        return info;

    }

    public String getVarInfoSG() {
        String info = "";

        info += "Add suction group variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nEx. Liquid Pressure `%rackname` `%sgname`"
                + "\nCondenser variables include:\n"
                + "%storename\n%rackname\n%sgname\n";

        return info;

    }

    public String getVarInfoSys() {
        String info = "";

        info += "Add system variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nEx. System Status `%rackname` `%sysname`"
                + "\nSystem variables include:\n"
                + "%storename\n%rackname\n%sgname\n%sysname\n";

        return info;

    }

    public String getVarInfoComp() {
        String info = "";

        info += "Add compressor variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nEx. Comp Status `%rackname` `%compname`"
                + "\nCompressor variables include:\n"
                + "%storename\n%rackname\n%sgname\n%compname\n";

        return info;

    }

    public String getVarInfoExtra() {
        String info = "";

        info += "Add variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nAll variables in other groups can"
                + " be used in any group";

        return info;

    }

    private DefaultTableModel getDefaultTableModel() {
        return new DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Name", "IO Type", "Display Value", "UoM", "Constant", "Offset",
                    "Decimal Places", "Generate Alerts", "Alert Time Frame",
                    "Low Alert", "High Alert", "Log Values", "Log Param", "Log Time Period"

                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class,
                java.lang.String.class, java.lang.String.class, java.lang.String.class,
                java.lang.String.class, java.lang.String.class, java.lang.String.class,
                java.lang.String.class, java.lang.String.class, java.lang.String.class,
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false,
                false, false, false, false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup _ButtonGroup_LogType;
    private javax.swing.JButton _Button_LoadProgramDefaults;
    private javax.swing.JButton _Button_LoadUserDefaults;
    private javax.swing.JButton _Button_NewName;
    private javax.swing.JButton _Button_SaveAllIoNames;
    private javax.swing.JButton _Button_SaveSelected;
    private javax.swing.JButton _Button_SaveUserDefaults;
    private javax.swing.JCheckBox _CheckBox_Alert;
    private javax.swing.JComboBox _ComboBox_Groups;
    private javax.swing.JComboBox _ComboBox_LogType;
    private javax.swing.JComboBox _ComboBox_Type;
    private javax.swing.JFormattedTextField _FTF_AlertHigh;
    private javax.swing.JFormattedTextField _FTF_AlertLow;
    private javax.swing.JFormattedTextField _FTF_AlertTimeDelay;
    private javax.swing.JFormattedTextField _FTF_Constant;
    private javax.swing.JFormattedTextField _FTF_DecimalPlaces;
    private javax.swing.JFormattedTextField _FTF_DisplayedValue;
    private javax.swing.JFormattedTextField _FTF_LogParam1;
    private javax.swing.JFormattedTextField _FTF_LogTimeDay;
    private javax.swing.JFormattedTextField _FTF_LogTimeMonth;
    private javax.swing.JFormattedTextField _FTF_LogTimeYear;
    private javax.swing.JFormattedTextField _FTF_Offset;
    private javax.swing.JLabel _Label_Alert;
    private javax.swing.JLabel _Label_LogParam;
    private javax.swing.JLabel _Label_LogParam1;
    private javax.swing.JLabel _Label_LogTime;
    private javax.swing.JLabel _Label_LogTimeDays;
    private javax.swing.JLabel _Label_LogTimeMonth;
    private javax.swing.JLabel _Label_LogTimeYear;
    private javax.swing.JLabel _Label_alertHigh;
    private javax.swing.JLabel _Label_constant;
    private javax.swing.JLabel _Label_constant1;
    private javax.swing.JLabel _Label_constant2;
    private javax.swing.JLabel _Label_decimalPlaces;
    private javax.swing.JLabel _Label_name;
    private javax.swing.JLabel _Label_offset;
    private javax.swing.JLabel _Label_type;
    private javax.swing.JLabel _Label_uom;
    private javax.swing.JLabel _Label_valueDisplayed;
    private javax.swing.JPanel _Panel_SelectedItemInfo;
    private javax.swing.JRadioButton _RadioButton_Avg;
    private javax.swing.JRadioButton _RadioButton_Max;
    private javax.swing.JRadioButton _RadioButton_Min;
    private javax.swing.JTable _Table_Items;
    private javax.swing.JTextField _TextField_UoM;
    private javax.swing.JTextField _Textfield_Name;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
