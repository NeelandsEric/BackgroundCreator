package Creator;

import java.awt.Dimension;
import javax.swing.ImageIcon;

/**
 * Controls panel controls all the variables that the user can change
 *
 * @author EricGummerson
 */
public final class ControlsPanel extends javax.swing.JPanel {

    public MainFrame mf;
    public ControlSettings cs;
    public int numRacks;
    public int numFans;
    public int numSG;
    public int numComp;
    public int numSystems;

    /**
     * Creates new form MainPanel
     *
     * @param mf MainFrame
     * @param cs ControlSettings
     */
    public ControlsPanel(MainFrame mf, ControlSettings cs) {
        this.mf = mf;
        this.cs = cs;
        initComponents();

    }

    /**
     * Get the control settings
     *
     * @return ControlSettings
     */
    public ControlSettings getCs() {
        return cs;
    }

    /**
     * Set the control settings
     *
     * @param cs ControlSettings
     */
    public void setCs(ControlSettings cs) {
        this.cs = cs;
    }

    /**
     * Gets the file names for the displays Format: StoreName Tab
     * WidthxHeight.png
     *
     * @param filePath path of the folder to save in
     * @param d dimension size of the panel
     * @return array of strings, file names used to save all the files
     */
    public String[] getFileNames(String filePath, Dimension d) {
        String[] fn = new String[numRacks + 4]; //[numRacks * 2 + 4]
        String storeName = cs.getStoreName().replace(" ", "_");

        fn[0] = filePath + storeName + "_[1]_Main-" + +d.width + "x" + d.height + ".png";

        for (int i = 1; i <= numRacks; i++) {
            fn[i] = filePath + storeName + "_[" + (i + 1) + "]_Rack{" + cs.getRackName(i - 1).replace(" ", "_")
                    + "}-" + d.width + "x" + d.height + ".png";
        }
        /*
         for (int i = 1; i <= numRacks; i++) {
         fn[i + numRacks] = filePath + storeName + "_[" + (i + numRacks + 1) + "]_Load{" + cs.getRackName(i - 1).replace("Rack", "Load").replace(" ", "_")
         + "}-" + d.width + "x" + d.height + ".png";
         }*/

        fn[fn.length - 3] = filePath + storeName + "_[" + (fn.length - 2) + "]_Financial-" + +d.width + "x" + d.height + ".png";
        fn[fn.length - 2] = filePath + storeName + "_[" + (fn.length) + "]_Energy-" + +d.width + "x" + d.height + ".png";
        fn[fn.length - 1] = filePath + storeName + "_[" + (fn.length - 1) + "]_Glycol-" + +d.width + "x" + d.height + ".png";

        return fn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        _Panel_Controls = new javax.swing.JPanel();
        _Label_Site = new javax.swing.JLabel();
        _TextField_SiteName = new javax.swing.JTextField();
        _Label_NumberRacks = new javax.swing.JLabel();
        _ComboBox_Racks = new javax.swing.JComboBox();
        _Label_RackSelected = new javax.swing.JLabel();
        _Label_CondenserFans = new javax.swing.JLabel();
        _Label_NumberSuctionGroups = new javax.swing.JLabel();
        _Label_SGOptions = new javax.swing.JLabel();
        _Label_SuctionGroupOptions = new javax.swing.JLabel();
        _ComboBox_SuctionGroups = new javax.swing.JComboBox();
        _Label_Compressors = new javax.swing.JLabel();
        _Label_NumberSystems = new javax.swing.JLabel();
        _Label_SuctionGroupName = new javax.swing.JLabel();
        _TextField_SuctionGroupName = new javax.swing.JTextField();
        _FormattedTF_NumRacks = new javax.swing.JFormattedTextField();
        _FormattedTF_NumFans = new javax.swing.JFormattedTextField();
        _FormattedTF_NumSG = new javax.swing.JFormattedTextField();
        _FormattedTF_NumComp = new javax.swing.JFormattedTextField();
        _FormattedTF_NumSystems = new javax.swing.JFormattedTextField();
        _CheckBox_Glycol = new javax.swing.JCheckBox();
        _Label_NumberGlycolSystems = new javax.swing.JLabel();
        _FormattedTF_NumGlycolSystems = new javax.swing.JFormattedTextField();
        _Label_Glycol = new javax.swing.JLabel();
        _CheckBox_CondVFD = new javax.swing.JCheckBox();
        _CheckBox_CondSplit = new javax.swing.JCheckBox();
        _Label_CompressorsVFD = new javax.swing.JLabel();
        _FormattedTF_CompVFD = new javax.swing.JFormattedTextField();
        _CheckBox_CompVFD = new javax.swing.JCheckBox();
        _Label_SystemSave1 = new javax.swing.JLabel();
        _Label_NumberFanPanels = new javax.swing.JLabel();
        _FormattedTF_NumFanPanels = new javax.swing.JFormattedTextField();
        _ScrollPane_Log = new javax.swing.JScrollPane();
        _TextArea_Log = new javax.swing.JTextArea();
        _Panel_NamePanel = new javax.swing.JPanel();
        _ComboBox_RackNumber = new javax.swing.JComboBox();
        _Label_RackNumber = new javax.swing.JLabel();
        _Label_RackName = new javax.swing.JLabel();
        _TextField_RackName = new javax.swing.JTextField();
        _Button_RackPrev = new javax.swing.JButton();
        _Button_RackNext = new javax.swing.JButton();
        _Label_CompressorNumber = new javax.swing.JLabel();
        _ComboBox_CompressorNumber = new javax.swing.JComboBox();
        _Label_CompressorName = new javax.swing.JLabel();
        _TextField_CompressorName = new javax.swing.JTextField();
        _Button_CompPrev = new javax.swing.JButton();
        _Button_CompNext = new javax.swing.JButton();
        _Label_SystemNumber = new javax.swing.JLabel();
        _TextField_SystemName = new javax.swing.JTextField();
        _Button_SysNext = new javax.swing.JButton();
        _Button_SysPrev = new javax.swing.JButton();
        _ComboBox_Systems = new javax.swing.JComboBox();
        _Label_SystemName = new javax.swing.JLabel();
        _Label_SystemNumber1 = new javax.swing.JLabel();
        _TextField_GlycolSystemName = new javax.swing.JTextField();
        _Button_GlycolSysNext = new javax.swing.JButton();
        _Button_GlycolSysPrev = new javax.swing.JButton();
        _ComboBox_GlycolSystems = new javax.swing.JComboBox();
        _Label_GlycolSystemName = new javax.swing.JLabel();
        _Label_SystemNumber2 = new javax.swing.JLabel();
        _TextField_SubSystemName = new javax.swing.JTextField();
        _Button_SubSysNext = new javax.swing.JButton();
        _Button_SubSysPrev = new javax.swing.JButton();
        _ComboBox_SubSystems = new javax.swing.JComboBox();
        _Label_SystemName1 = new javax.swing.JLabel();
        _Label_SystemNumber3 = new javax.swing.JLabel();
        _TextField_GlycolSubSystemName = new javax.swing.JTextField();
        _Button_GlycolSubSysNext = new javax.swing.JButton();
        _Button_GlycolSubSysPrev = new javax.swing.JButton();
        _ComboBox_GlycolSubSystems = new javax.swing.JComboBox();
        _Label_SystemName2 = new javax.swing.JLabel();
        _Label_SystemNumber4 = new javax.swing.JLabel();
        _FTF_NumSubSystems = new javax.swing.JFormattedTextField();
        _Label_SystemNumber5 = new javax.swing.JLabel();
        _FTF_NumGlycolSubSystems = new javax.swing.JFormattedTextField();
        _Label_StoreLogo = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(1031, 680));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(1031, 680));

        _Label_Site.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_Site.setText("Name of Site");

        _TextField_SiteName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _TextField_SiteName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _TextField_SiteName.setText("Store Name");
        _TextField_SiteName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                _TextField_SiteNameFocusLost(evt);
            }
        });

        _Label_NumberRacks.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_NumberRacks.setText("Number of Racks");

        _ComboBox_Racks.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _ComboBox_Racks.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Rack 1" }));
        _ComboBox_Racks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_RacksActionPerformed(evt);
            }
        });

        _Label_RackSelected.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        _Label_RackSelected.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_RackSelected.setText("Rack 1 Options");

        _Label_CondenserFans.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _Label_CondenserFans.setText("Number of Condenser Fans");

        _Label_NumberSuctionGroups.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _Label_NumberSuctionGroups.setText("Number of Suction Groups");

        _Label_SGOptions.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        _Label_SGOptions.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_SGOptions.setText("Suction Group 1 Options");

        _Label_SuctionGroupOptions.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _Label_SuctionGroupOptions.setText("Suction Group Options");

        _ComboBox_SuctionGroups.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _ComboBox_SuctionGroups.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SGr1()" }));
        _ComboBox_SuctionGroups.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_SuctionGroupsActionPerformed(evt);
            }
        });

        _Label_Compressors.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _Label_Compressors.setText("Number of Compressors");

        _Label_NumberSystems.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _Label_NumberSystems.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_NumberSystems.setText("Number of Systems");

        _Label_SuctionGroupName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _Label_SuctionGroupName.setText("Suction Group Name");

        _TextField_SuctionGroupName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _TextField_SuctionGroupName.setText("SGr1()");
        _TextField_SuctionGroupName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                _TextField_SuctionGroupNameFocusLost(evt);
            }
        });

        _FormattedTF_NumRacks.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        _FormattedTF_NumRacks.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FormattedTF_NumRacks.setText("1");
        _FormattedTF_NumRacks.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                _FormattedTF_NumRacksPropertyChange(evt);
            }
        });

        _FormattedTF_NumFans.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        _FormattedTF_NumFans.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FormattedTF_NumFans.setText("2");
        _FormattedTF_NumFans.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                _FormattedTF_NumFansPropertyChange(evt);
            }
        });

        _FormattedTF_NumSG.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        _FormattedTF_NumSG.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FormattedTF_NumSG.setText("1");
        _FormattedTF_NumSG.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                _FormattedTF_NumSGPropertyChange(evt);
            }
        });

        _FormattedTF_NumComp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        _FormattedTF_NumComp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FormattedTF_NumComp.setText("1");
        _FormattedTF_NumComp.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                _FormattedTF_NumCompPropertyChange(evt);
            }
        });

        _FormattedTF_NumSystems.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        _FormattedTF_NumSystems.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FormattedTF_NumSystems.setText("1");
        _FormattedTF_NumSystems.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                _FormattedTF_NumSystemsPropertyChange(evt);
            }
        });

        _CheckBox_Glycol.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _CheckBox_Glycol.setText("Glycol Store");
        _CheckBox_Glycol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _CheckBox_GlycolActionPerformed(evt);
            }
        });

        _Label_NumberGlycolSystems.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _Label_NumberGlycolSystems.setText("Number of Glycol Systems");

        _FormattedTF_NumGlycolSystems.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        _FormattedTF_NumGlycolSystems.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FormattedTF_NumGlycolSystems.setText("1");
        _FormattedTF_NumGlycolSystems.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                _FormattedTF_NumGlycolSystemsPropertyChange(evt);
            }
        });

        _Label_Glycol.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        _Label_Glycol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_Glycol.setText("Glycol Options");

        _CheckBox_CondVFD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _CheckBox_CondVFD.setText("Cond VFD");
        _CheckBox_CondVFD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _CheckBox_CondVFDActionPerformed(evt);
            }
        });

        _CheckBox_CondSplit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _CheckBox_CondSplit.setText("Cond Split");
        _CheckBox_CondSplit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _CheckBox_CondSplitActionPerformed(evt);
            }
        });

        _Label_CompressorsVFD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _Label_CompressorsVFD.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        _Label_CompressorsVFD.setText("VFD on Compressor");

        _FormattedTF_CompVFD.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        _FormattedTF_CompVFD.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FormattedTF_CompVFD.setText("0");
        _FormattedTF_CompVFD.setEnabled(false);
        _FormattedTF_CompVFD.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                _FormattedTF_CompVFDPropertyChange(evt);
            }
        });

        _CheckBox_CompVFD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _CheckBox_CompVFD.setText("Comp VFD");
        _CheckBox_CompVFD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _CheckBox_CompVFD.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        _CheckBox_CompVFD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _CheckBox_CompVFDActionPerformed(evt);
            }
        });

        _Label_SystemSave1.setForeground(new java.awt.Color(255, 0, 0));
        _Label_SystemSave1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_SystemSave1.setText("0 = Unused");

        _Label_NumberFanPanels.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _Label_NumberFanPanels.setText("Number of Fan Panels");

        _FormattedTF_NumFanPanels.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        _FormattedTF_NumFanPanels.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FormattedTF_NumFanPanels.setText("0");
        _FormattedTF_NumFanPanels.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                _FormattedTF_NumFanPanelsPropertyChange(evt);
            }
        });

        _TextArea_Log.setColumns(20);
        _TextArea_Log.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _TextArea_Log.setRows(5);
        _ScrollPane_Log.setViewportView(_TextArea_Log);

        javax.swing.GroupLayout _Panel_ControlsLayout = new javax.swing.GroupLayout(_Panel_Controls);
        _Panel_Controls.setLayout(_Panel_ControlsLayout);
        _Panel_ControlsLayout.setHorizontalGroup(
            _Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_Panel_ControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(_Label_Glycol, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(_Panel_ControlsLayout.createSequentialGroup()
                        .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(_FormattedTF_NumSG, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, _Panel_ControlsLayout.createSequentialGroup()
                                    .addComponent(_Label_CondenserFans, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(_FormattedTF_NumFans, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(_Label_NumberSuctionGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_CheckBox_CondVFD, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_CheckBox_CondSplit)))
                    .addGroup(_Panel_ControlsLayout.createSequentialGroup()
                        .addComponent(_Label_NumberRacks, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_FormattedTF_NumRacks, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_ComboBox_Racks, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(_Label_SuctionGroupName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, _Panel_ControlsLayout.createSequentialGroup()
                            .addComponent(_Label_Site, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(_TextField_SiteName)
                            .addGap(36, 36, 36))
                        .addComponent(_Label_RackSelected, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(_Panel_ControlsLayout.createSequentialGroup()
                        .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_Label_NumberFanPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_CheckBox_Glycol, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_FormattedTF_NumFanPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(_Panel_ControlsLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(_Label_NumberGlycolSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(_FormattedTF_NumGlycolSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(_ScrollPane_Log, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(_Label_SGOptions, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, _Panel_ControlsLayout.createSequentialGroup()
                            .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(_Panel_ControlsLayout.createSequentialGroup()
                                    .addComponent(_CheckBox_CompVFD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(215, 215, 215))
                                .addGroup(_Panel_ControlsLayout.createSequentialGroup()
                                    .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, _Panel_ControlsLayout.createSequentialGroup()
                                            .addComponent(_Label_CompressorsVFD, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(_FormattedTF_CompVFD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(_Panel_ControlsLayout.createSequentialGroup()
                                            .addComponent(_Label_Compressors, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(_FormattedTF_NumComp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(4, 4, 4)
                                    .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(_Label_SystemSave1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(_Label_NumberSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                            .addComponent(_FormattedTF_NumSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(_TextField_SuctionGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, _Panel_ControlsLayout.createSequentialGroup()
                            .addComponent(_Label_SuctionGroupOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(_ComboBox_SuctionGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        _Panel_ControlsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {_Label_CondenserFans, _Label_NumberSuctionGroups});

        _Panel_ControlsLayout.setVerticalGroup(
            _Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_Panel_ControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_Label_Site, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_TextField_SiteName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_Label_NumberRacks, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_FormattedTF_NumRacks, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_ComboBox_Racks, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_Label_RackSelected)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_Label_CondenserFans, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_FormattedTF_NumFans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_CheckBox_CondVFD, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_Label_NumberSuctionGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_FormattedTF_NumSG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_CheckBox_CondSplit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_Label_SuctionGroupOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_ComboBox_SuctionGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_Label_SuctionGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_TextField_SuctionGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_Label_SGOptions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(_Label_Compressors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(_FormattedTF_NumComp, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                    .addComponent(_Label_NumberSystems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(_FormattedTF_NumSystems, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_CheckBox_CompVFD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(_FormattedTF_CompVFD, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(_Label_SystemSave1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(_Label_CompressorsVFD, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(_Label_Glycol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_CheckBox_Glycol)
                    .addComponent(_Label_NumberGlycolSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_FormattedTF_NumGlycolSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(_Panel_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_Label_NumberFanPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_FormattedTF_NumFanPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(_ScrollPane_Log, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        _Panel_ControlsLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {_FormattedTF_NumFans, _FormattedTF_NumRacks, _FormattedTF_NumSG, _Label_CondenserFans, _Label_NumberSuctionGroups});

        _ComboBox_RackNumber.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Rack A" }));
        _ComboBox_RackNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_RackNumberActionPerformed(evt);
            }
        });

        _Label_RackNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_RackNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_RackNumber.setText("Rack #      ");
        _Label_RackNumber.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        _Label_RackName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_RackName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_RackName.setText("Rack Name");

        _TextField_RackName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _TextField_RackName.setText("Rack A");

        _Button_RackPrev.setText("Prev");
        _Button_RackPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_RackPrevActionPerformed(evt);
            }
        });

        _Button_RackNext.setText("Next");
        _Button_RackNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_RackNextActionPerformed(evt);
            }
        });

        _Label_CompressorNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_CompressorNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_CompressorNumber.setText("Compressor Number");
        _Label_CompressorNumber.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        _ComboBox_CompressorNumber.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Compressor 1" }));
        _ComboBox_CompressorNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_CompressorNumberActionPerformed(evt);
            }
        });

        _Label_CompressorName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_CompressorName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_CompressorName.setText("Compressor Name");

        _TextField_CompressorName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _TextField_CompressorName.setText("Compressor 1");

        _Button_CompPrev.setText("Prev");
        _Button_CompPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_CompPrevActionPerformed(evt);
            }
        });

        _Button_CompNext.setText("Next");
        _Button_CompNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_CompNextActionPerformed(evt);
            }
        });

        _Label_SystemNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_SystemNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_SystemNumber.setText("System #");
        _Label_SystemNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        _TextField_SystemName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _TextField_SystemName.setText("System 1");

        _Button_SysNext.setText("Next");
        _Button_SysNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_SysNextActionPerformed(evt);
            }
        });

        _Button_SysPrev.setText("Prev");
        _Button_SysPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_SysPrevActionPerformed(evt);
            }
        });

        _ComboBox_Systems.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "System 1" }));
        _ComboBox_Systems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_SystemsActionPerformed(evt);
            }
        });

        _Label_SystemName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_SystemName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_SystemName.setText("System Name");

        _Label_SystemNumber1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_SystemNumber1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_SystemNumber1.setText("Glycol System #");
        _Label_SystemNumber1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        _TextField_GlycolSystemName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _TextField_GlycolSystemName.setText("G01");
        _TextField_GlycolSystemName.setEnabled(false);

        _Button_GlycolSysNext.setText("Next");
        _Button_GlycolSysNext.setEnabled(false);
        _Button_GlycolSysNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_GlycolSysNextActionPerformed(evt);
            }
        });

        _Button_GlycolSysPrev.setText("Prev");
        _Button_GlycolSysPrev.setEnabled(false);
        _Button_GlycolSysPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_GlycolSysPrevActionPerformed(evt);
            }
        });

        _ComboBox_GlycolSystems.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "System 1" }));
        _ComboBox_GlycolSystems.setEnabled(false);
        _ComboBox_GlycolSystems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_GlycolSystemsActionPerformed(evt);
            }
        });

        _Label_GlycolSystemName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_GlycolSystemName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_GlycolSystemName.setText("Glycol System Name");

        _Label_SystemNumber2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_SystemNumber2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_SystemNumber2.setText("Sub Systems");
        _Label_SystemNumber2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        _TextField_SubSystemName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _TextField_SubSystemName.setText("System 1");

        _Button_SubSysNext.setText("Next");
        _Button_SubSysNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_SubSysNextActionPerformed(evt);
            }
        });

        _Button_SubSysPrev.setText("Prev");
        _Button_SubSysPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_SubSysPrevActionPerformed(evt);
            }
        });

        _ComboBox_SubSystems.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "System 1" }));
        _ComboBox_SubSystems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_SubSystemsActionPerformed(evt);
            }
        });

        _Label_SystemName1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_SystemName1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_SystemName1.setText("Sub System Name");

        _Label_SystemNumber3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_SystemNumber3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_SystemNumber3.setText("Glycol Sub Sys");
        _Label_SystemNumber3.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        _TextField_GlycolSubSystemName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _TextField_GlycolSubSystemName.setText("System 1");

        _Button_GlycolSubSysNext.setText("Next");
        _Button_GlycolSubSysNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_GlycolSubSysNextActionPerformed(evt);
            }
        });

        _Button_GlycolSubSysPrev.setText("Prev");
        _Button_GlycolSubSysPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_GlycolSubSysPrevActionPerformed(evt);
            }
        });

        _ComboBox_GlycolSubSystems.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "System 1" }));
        _ComboBox_GlycolSubSystems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_GlycolSubSystemsActionPerformed(evt);
            }
        });

        _Label_SystemName2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_SystemName2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_SystemName2.setText("Sub System Name");

        _Label_SystemNumber4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_SystemNumber4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_SystemNumber4.setText("Number of Sub Systems");
        _Label_SystemNumber4.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        _FTF_NumSubSystems.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        _FTF_NumSubSystems.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_NumSubSystems.setText("0");
        _FTF_NumSubSystems.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                _FTF_NumSubSystemsPropertyChange(evt);
            }
        });

        _Label_SystemNumber5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _Label_SystemNumber5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_SystemNumber5.setText("Number of Glycol Sub Sys");
        _Label_SystemNumber5.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        _FTF_NumGlycolSubSystems.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        _FTF_NumGlycolSubSystems.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_NumGlycolSubSystems.setText("0");
        _FTF_NumGlycolSubSystems.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                _FTF_NumGlycolSubSystemsPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout _Panel_NamePanelLayout = new javax.swing.GroupLayout(_Panel_NamePanel);
        _Panel_NamePanel.setLayout(_Panel_NamePanelLayout);
        _Panel_NamePanelLayout.setHorizontalGroup(
            _Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(_Label_SystemNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(_ComboBox_Systems, 0, 114, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                .addComponent(_Label_SystemNumber4, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(_FTF_NumSubSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                        .addComponent(_Button_SysPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(_Button_SysNext, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(_TextField_SystemName)
                                        .addComponent(_Label_SystemName, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)))
                                .addGap(11, 11, 11)
                                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                        .addComponent(_Label_SystemNumber2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(_Label_SystemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                        .addComponent(_ComboBox_SubSystems, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _Panel_NamePanelLayout.createSequentialGroup()
                                                .addComponent(_Button_SubSysPrev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(_Button_SubSysNext, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(_TextField_SubSystemName, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(1, 1, 1))
                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(_ComboBox_RackNumber, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(_Label_RackNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                .addComponent(_Button_RackPrev, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(_Button_RackNext, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(_TextField_RackName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_Label_RackName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(11, 11, 11)
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(_ComboBox_CompressorNumber, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(_Label_CompressorNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_Label_CompressorName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _Panel_NamePanelLayout.createSequentialGroup()
                                    .addComponent(_Button_CompPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(_Button_CompNext, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(_TextField_CompressorName, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(_Label_SystemNumber1, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(_ComboBox_GlycolSystems, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                .addComponent(_Label_SystemNumber5, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(_FTF_NumGlycolSubSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _Panel_NamePanelLayout.createSequentialGroup()
                                        .addComponent(_Button_GlycolSysPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(_Button_GlycolSysNext, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(_TextField_GlycolSystemName)
                                    .addComponent(_Label_GlycolSystemName, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(_ComboBox_GlycolSubSystems, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(_Label_SystemNumber3, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                        .addComponent(_Button_GlycolSubSysPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(_Button_GlycolSubSysNext, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))
                                    .addComponent(_TextField_GlycolSubSystemName, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(_Label_SystemName2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(24, 24, 24))
        );

        _Panel_NamePanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {_Button_CompNext, _Button_GlycolSubSysPrev, _Button_SubSysNext});

        _Panel_NamePanelLayout.setVerticalGroup(
            _Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_Label_RackNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_Label_RackName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_ComboBox_RackNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_TextField_RackName, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)))
                            .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_Label_CompressorNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_Label_CompressorName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(_Button_RackPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(_Button_RackNext, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(_ComboBox_CompressorNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(_TextField_CompressorName)))))
                            .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_Button_CompPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_Button_CompNext, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _Panel_NamePanelLayout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_Button_SubSysPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_Button_SubSysNext, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(_Label_SystemNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(_Label_SystemName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                        .addGap(82, 82, 82)
                                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(_Button_SysPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(_Button_SysNext, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(_Label_SystemNumber2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(_Label_SystemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(_ComboBox_SubSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(_TextField_SubSystemName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_ComboBox_Systems, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_TextField_SystemName))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(_FTF_NumSubSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_Label_SystemNumber4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                        .addComponent(_Label_SystemNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_ComboBox_GlycolSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_ComboBox_GlycolSubSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_TextField_GlycolSubSystemName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_Button_GlycolSubSysPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_Button_GlycolSubSysNext, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(_Panel_NamePanelLayout.createSequentialGroup()
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_Label_GlycolSystemName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_Label_SystemNumber3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_Label_SystemName2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_TextField_GlycolSystemName, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_Button_GlycolSysPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_Button_GlycolSysNext, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(_Panel_NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_Label_SystemNumber5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_FTF_NumGlycolSubSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        _Panel_NamePanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {_Button_CompPrev, _Button_RackNext, _Button_RackPrev, _Button_SysPrev});

        _Panel_NamePanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {_TextField_CompressorName, _TextField_GlycolSystemName, _TextField_RackName, _TextField_SystemName});

        _Panel_NamePanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {_ComboBox_GlycolSystems, _ComboBox_Systems});

        _Label_StoreLogo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _Label_StoreLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_StoreLogo.setText("Store Logo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(_Panel_Controls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(_Panel_NamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(_Label_StoreLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(_Panel_Controls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(_Panel_NamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_Label_StoreLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(5, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * combo box for racks event
     *
     * @param evt
     */
    private void _ComboBox_RacksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_RacksActionPerformed

        // Retrieve the settings for the rack
        _Label_RackSelected.setText(_ComboBox_Racks.getSelectedItem() + " Options");
        _ComboBox_SuctionGroups.setSelectedIndex(0);
        //System.out.println(_ComboBox_Racks.getSelectedIndex()); // index
        //System.out.println(_ComboBox_Racks.getSelectedItem()); // text
        this.loadRackOptions(_ComboBox_Racks.getSelectedIndex());

        // Update the display frame
        //System.out.println("combo box racks update");
        this.updateDisplay();
        // Done updating display frame
    }//GEN-LAST:event__ComboBox_RacksActionPerformed

    /**
     * combo box for suction group event
     *
     * @param evt
     */
    private void _ComboBox_SuctionGroupsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_SuctionGroupsActionPerformed

        // Update suction settings
        _Label_SGOptions.setText(_ComboBox_SuctionGroups.getSelectedItem() + " Options");
        _TextField_SuctionGroupName.setText((String) _ComboBox_SuctionGroups.getSelectedItem());
        this.loadSuctionGroupOptions(_ComboBox_SuctionGroups.getSelectedIndex());

        // Update the display frame
        //System.out.println("combo box suction groups update");
        this.updateDisplay();
        // Done updating display frame
    }//GEN-LAST:event__ComboBox_SuctionGroupsActionPerformed

    /**
     * textfield for suctiongroup focus lost
     *
     * @param evt
     */
    private void _TextField_SuctionGroupNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event__TextField_SuctionGroupNameFocusLost

        int rackIndex = _ComboBox_Racks.getSelectedIndex();
        int sgIndex = _ComboBox_SuctionGroups.getSelectedIndex();
        String name = _TextField_SuctionGroupName.getText();
        cs.getRackIndex(rackIndex).getSuctionGroupIndex(sgIndex).setName(name);
        this.loadComboBoxSuctionGroups(_ComboBox_SuctionGroups.getSelectedIndex());
        updateDisplay();
    }//GEN-LAST:event__TextField_SuctionGroupNameFocusLost

    /**
     * number of racks formatted text field property changed
     *
     * @param evt
     */
    private void _FormattedTF_NumRacksPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event__FormattedTF_NumRacksPropertyChange

        try {
            this.updateRackCount();
            addRacks();
            int rackIndex = _ComboBox_Racks.getSelectedIndex();
            this.updateRackNames(rackIndex);
            this.loadComboBoxRacks(_ComboBox_Racks.getSelectedIndex());

            // Update the display frame
            //System.out.println("slider num racks update");
            this.updateDisplay();
            // Done updating display frame
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event__FormattedTF_NumRacksPropertyChange

    /**
     * number of fans formatted text field property changed
     *
     * @param evt
     */
    private void _FormattedTF_NumFansPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event__FormattedTF_NumFansPropertyChange
        try {
            // update the current rack            
            this.updateFanCount();
            cs.getRackIndex(_ComboBox_Racks.getSelectedIndex()).setNumCondenserFans(numFans);
            //System.out.println("num fans: " + numFans);
            // Update the display frame            
            this.updateDisplay();
            // Done updating display frame
        } catch (NumberFormatException e) {
            //System.out.println("hmm");
        }
    }//GEN-LAST:event__FormattedTF_NumFansPropertyChange

    /**
     * number of suctiongroups formatted text field property changed
     *
     * @param evt
     */
    private void _FormattedTF_NumSGPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event__FormattedTF_NumSGPropertyChange

        // Suction groups -> update combo box
        try {
            int rackIndex = _ComboBox_Racks.getSelectedIndex();
            this.updateSGCount();
            int sgIndex = _ComboBox_SuctionGroups.getSelectedIndex();
            String name = _TextField_SuctionGroupName.getText();
            cs.getRackIndex(rackIndex).getSuctionGroupIndex(sgIndex).setName(name);
            cs.getRackIndex(rackIndex).setNumSuctionGroups(numSG);
            this.loadComboBoxSuctionGroups(_ComboBox_SuctionGroups.getSelectedIndex());

            // Update the display frame
            //System.out.println("slider suction groups update");
            this.updateDisplay();
            // Done updating display frame
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event__FormattedTF_NumSGPropertyChange

    /**
     * number of comp formatted text field property changed
     *
     * @param evt
     */
    private void _FormattedTF_NumCompPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event__FormattedTF_NumCompPropertyChange

        try {
            this.updateCompCount();
            // update the compressor names fields
            this.updateCompressorNames(_ComboBox_CompressorNumber.getSelectedIndex());
            // Update the display frame
            //System.out.println("slider compressor update");
            this.updateDisplay();
            // Done updating display frame
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event__FormattedTF_NumCompPropertyChange

    /**
     * number of systems formatted text field property changed
     *
     * @param evt
     */
    private void _FormattedTF_NumSystemsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event__FormattedTF_NumSystemsPropertyChange

        try {
            this.updateSystemCount();
            // update the system names fields
            this.updateSystemNames(_ComboBox_Systems.getSelectedIndex());

            // Update the display frame
            //System.out.println("slider systems update");
            this.updateDisplay();
            // Done updating display frame
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event__FormattedTF_NumSystemsPropertyChange

    /**
     * combo box systems event
     *
     * @param evt
     */
    private void _ComboBox_SystemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_SystemsActionPerformed

        if(_ComboBox_Systems.getSelectedItem().toString().equals("None")){
            return;
        }
        // Update the text
        int sysIndex = _ComboBox_Systems.getSelectedIndex();
        int subSysIndex = _ComboBox_SubSystems.getSelectedIndex();
        this.updateSystemNames(sysIndex);
        this.updateSubSystemNames(subSysIndex);
        // Update the display frame
        this.updateDisplay();
        // Done updating display frame
    }//GEN-LAST:event__ComboBox_SystemsActionPerformed

    /**
     * previous system button click
     *
     * @param evt
     */
    private void _Button_SysPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_SysPrevActionPerformed

        // Save the field
        int rackIndex = _ComboBox_Racks.getSelectedIndex();
        int sgIndex = _ComboBox_SuctionGroups.getSelectedIndex();
        int sysIndex = _ComboBox_Systems.getSelectedIndex();
        String name = _TextField_SystemName.getText();
        Rack r = cs.getRackIndex(rackIndex);
        SuctionGroup sg = r.getSuctionGroup().get(sgIndex);
        sg.replaceSystemName(name, sysIndex);

        // Select previous name
        if (sysIndex > 0) {
            _ComboBox_Systems.setSelectedIndex(sysIndex - 1);
            _TextField_SystemName.setText(sg.getSystemNameIndex(sysIndex - 1));
            this._FTF_NumSubSystems.setText(String.valueOf(sg.getNumSubSystems(sg.getSystemNameIndex(sysIndex - 1))));
        } else {
            this._FTF_NumSubSystems.setText(String.valueOf(sg.getNumSubSystems(sg.getSystemNameIndex(0))));
        }

        // Update the display frame
        //System.out.println("button prev update");
        this.updateSubSystemNames(sysIndex);
        this.updateDisplay();
        // Done updating display frame
        // Highlight the text field
        this._TextField_SystemName.requestFocus();
        this._TextField_SystemName.selectAll();
    }//GEN-LAST:event__Button_SysPrevActionPerformed

    /**
     * next system button click
     *
     * @param evt
     */
    private void _Button_SysNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_SysNextActionPerformed

        int rackIndex = _ComboBox_Racks.getSelectedIndex();
        int sgIndex = _ComboBox_SuctionGroups.getSelectedIndex();
        int sysIndex = _ComboBox_Systems.getSelectedIndex();
        String name = _TextField_SystemName.getText();
        Rack r = cs.getRackIndex(rackIndex);
        SuctionGroup sg = r.getSuctionGroup().get(sgIndex);
        sg.replaceSystemName(name, sysIndex);
        // Select previous name
        if (sysIndex < sg.getNumSystems() - 1) {
            _ComboBox_Systems.setSelectedIndex(sysIndex + 1);
            _TextField_SystemName.setText(sg.getSystemNameIndex(sysIndex + 1));
            this._FTF_NumSubSystems.setText(String.valueOf(sg.getNumSubSystems(sg.getSystemNameIndex(sysIndex + 1))));
        } else {
            this._FTF_NumSubSystems.setText(String.valueOf(sg.getNumSubSystems(sg.getSystemNameIndex(0))));
        }

        // Update the display frame
        //System.out.println("button next update");
        this.updateSubSystemNames(sysIndex);
        this.updateDisplay();
        // Done updating display frame
        // Highlight the text field
        this._TextField_SystemName.requestFocus();
        this._TextField_SystemName.selectAll();
    }//GEN-LAST:event__Button_SysNextActionPerformed

    /**
     * next comp button click
     *
     * @param evt
     */
    private void _Button_CompNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_CompNextActionPerformed

        // Save the field
        int rackIndex = _ComboBox_Racks.getSelectedIndex();
        int sgIndex = _ComboBox_SuctionGroups.getSelectedIndex();
        int compIndex = _ComboBox_CompressorNumber.getSelectedIndex();
        String name = _TextField_CompressorName.getText();
        Rack r = cs.getRackIndex(rackIndex);
        SuctionGroup sg = r.getSuctionGroup().get(sgIndex);
        sg.replaceCompressorName(name, compIndex);

        // Select previous name
        if (compIndex < sg.getNumCompressors() - 1) {
            _ComboBox_CompressorNumber.setSelectedIndex(compIndex + 1);
            _TextField_CompressorName.setText(sg.getCompressorNameIndex(compIndex + 1));
        }

        // Update the display frame
        //System.out.println("button prev update");
        this.updateDisplay();
        // Done updating display frame
        // Highlight the text field
        this._TextField_CompressorName.requestFocus();
        this._TextField_CompressorName.selectAll();
    }//GEN-LAST:event__Button_CompNextActionPerformed

    /**
     * prev comp button click
     *
     * @param evt
     */
    private void _Button_CompPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_CompPrevActionPerformed

        // Save the field
        int rackIndex = _ComboBox_Racks.getSelectedIndex();
        int sgIndex = _ComboBox_SuctionGroups.getSelectedIndex();
        int compIndex = _ComboBox_CompressorNumber.getSelectedIndex();
        String name = _TextField_CompressorName.getText();
        Rack r = cs.getRackIndex(rackIndex);
        SuctionGroup sg = r.getSuctionGroup().get(sgIndex);
        sg.replaceCompressorName(name, compIndex);

        // Select previous name
        if (compIndex > 0) {
            _ComboBox_CompressorNumber.setSelectedIndex(compIndex - 1);
            _TextField_CompressorName.setText(sg.getCompressorNameIndex(compIndex - 1));
        }

        // Update the display frame
        //System.out.println("button prev update");
        this.updateDisplay();
        // Done updating display frame
        // Highlight the text field
        this._TextField_CompressorName.requestFocus();
        this._TextField_CompressorName.selectAll();
    }//GEN-LAST:event__Button_CompPrevActionPerformed

    /**
     * combo box compressor event
     *
     * @param evt
     */
    private void _ComboBox_CompressorNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_CompressorNumberActionPerformed

        // Update the text
        int compIndex = _ComboBox_CompressorNumber.getSelectedIndex();
        this.updateCompressorNames(compIndex);
        this.updateDisplay();
        // Done updating display frame
    }//GEN-LAST:event__ComboBox_CompressorNumberActionPerformed

    /**
     * next rack button click
     *
     * @param evt
     */
    private void _Button_RackNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_RackNextActionPerformed

        // Save the field
        int rackIndex = _ComboBox_RackNumber.getSelectedIndex();
        String name = _TextField_RackName.getText();
        Rack r = cs.getRackIndex(rackIndex);
        r.setName(name);

        // Select previous name
        if (rackIndex < numRacks - 1) {
            _ComboBox_RackNumber.setSelectedIndex(rackIndex + 1);
            _TextField_RackName.setText(cs.getRackIndex(rackIndex + 1).getName());
        }

        // Update the display frame
        //System.out.println("button prev update");
        this.loadComboBoxRacks(_ComboBox_Racks.getSelectedIndex());
        this.updateDisplay();
        // Done updating display frame
        // Highlight the text field
        this._TextField_RackName.requestFocus();
        this._TextField_RackName.selectAll();
    }//GEN-LAST:event__Button_RackNextActionPerformed

    /**
     * prev rack button click
     *
     * @param evt
     */
    private void _Button_RackPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_RackPrevActionPerformed

        // Save the field
        int rackIndex = _ComboBox_RackNumber.getSelectedIndex();

        String name = _TextField_RackName.getText();
        Rack r = cs.getRackIndex(rackIndex);
        r.setName(name);

        // Select previous name
        // Select previous name
        if (rackIndex > 0) {
            _ComboBox_RackNumber.setSelectedIndex(rackIndex - 1);
            _TextField_RackName.setText(cs.getRackIndex(rackIndex - 1).getName());
        }

        // Update the display frame
        //System.out.println("button prev update");
        this.loadComboBoxRacks(_ComboBox_Racks.getSelectedIndex());
        this.updateDisplay();
        // Done updating display frame
        // Highlight the text field
        this._TextField_RackName.requestFocus();
        this._TextField_RackName.selectAll();
    }//GEN-LAST:event__Button_RackPrevActionPerformed

    /**
     * combo box rack event
     *
     * @param evt
     */
    private void _ComboBox_RackNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_RackNumberActionPerformed

        // Update the text
        int rackIndex = _ComboBox_RackNumber.getSelectedIndex();
        this.updateRackNames(rackIndex);
        // Update the display frame
        this.updateDisplay();
        // Done updating display frame
    }//GEN-LAST:event__ComboBox_RackNumberActionPerformed

    private void _TextField_SiteNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event__TextField_SiteNameFocusLost

        cs.setStoreName(_TextField_SiteName.getText());
        this.updateDisplay();
    }//GEN-LAST:event__TextField_SiteNameFocusLost

    private void _FormattedTF_NumGlycolSystemsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event__FormattedTF_NumGlycolSystemsPropertyChange

        try {
            this.updateGlycolSystemCount();
            // update the system names fields
            this.updateGlycolSystemNames(_ComboBox_GlycolSystems.getSelectedIndex());

            // Update the display frame
            //System.out.println("slider systems update");
            this.updateDisplay();
            // Done updating display frame
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event__FormattedTF_NumGlycolSystemsPropertyChange

    private void _CheckBox_GlycolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__CheckBox_GlycolActionPerformed

        glycolSetting(_CheckBox_Glycol.isSelected());


    }//GEN-LAST:event__CheckBox_GlycolActionPerformed

    public void glycolSetting(boolean status) {

        _CheckBox_Glycol.setSelected(status);
        _FormattedTF_NumGlycolSystems.setEnabled(status);
        _Button_GlycolSysNext.setEnabled(status);
        _Button_GlycolSysPrev.setEnabled(status);
        _ComboBox_GlycolSystems.setEnabled(status);
        _TextField_GlycolSystemName.setEnabled(status);
        cs.glycolStore = status;

    }


    private void _Button_GlycolSysNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_GlycolSysNextActionPerformed
        int glycolSysIndex = _ComboBox_GlycolSystems.getSelectedIndex();
        String name = _TextField_GlycolSystemName.getText();
        cs.glycolSettings.replaceGlycolSystemName(name, glycolSysIndex);

        // Select previous name
        if (glycolSysIndex < cs.glycolSettings.getNumGlycolSystems() - 1) {
            _ComboBox_GlycolSystems.setSelectedIndex(glycolSysIndex + 1);
            _TextField_GlycolSystemName.setText(cs.glycolSettings.getGlycolSystemNameIndex(glycolSysIndex + 1));
            this._FTF_NumGlycolSubSystems.setText(String.valueOf(cs.glycolSettings.getNumSubSystems(cs.glycolSettings.getGlycolSystemNameIndex(glycolSysIndex + 1))));
        } else {
            this._FTF_NumGlycolSubSystems.setText(String.valueOf(cs.glycolSettings.getNumSubSystems(cs.glycolSettings.getGlycolSystemNameIndex(0))));
        }

        // Update the display frame
        //System.out.println("button next update");
        this.updateDisplay();
        // Done updating display frame
        // Highlight the text field
        this._TextField_GlycolSystemName.requestFocus();
        this._TextField_GlycolSystemName.selectAll();
    }//GEN-LAST:event__Button_GlycolSysNextActionPerformed

    private void _Button_GlycolSysPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_GlycolSysPrevActionPerformed

        // Save the field
        int glycolSysIndex = _ComboBox_GlycolSystems.getSelectedIndex();
        String name = _TextField_GlycolSystemName.getText();
        cs.glycolSettings.replaceGlycolSystemName(name, glycolSysIndex);

        // Select previous name
        if (glycolSysIndex > 0) {
            _ComboBox_GlycolSystems.setSelectedIndex(glycolSysIndex - 1);
            _TextField_GlycolSystemName.setText(cs.glycolSettings.getGlycolSystemNameIndex(glycolSysIndex - 1));
            this._FTF_NumGlycolSubSystems.setText(String.valueOf(cs.glycolSettings.getNumSubSystems(cs.glycolSettings.getGlycolSystemNameIndex(glycolSysIndex - 1))));
        } else {
            this._FTF_NumGlycolSubSystems.setText(String.valueOf(cs.glycolSettings.getNumSubSystems(cs.glycolSettings.getGlycolSystemNameIndex(0))));
        }

        // Update the display frame
        //System.out.println("button prev update");
        this.updateDisplay();
        // Done updating display frame
        // Highlight the text field
        this._TextField_GlycolSystemName.requestFocus();
        this._TextField_GlycolSystemName.selectAll();

    }//GEN-LAST:event__Button_GlycolSysPrevActionPerformed

    private void _ComboBox_GlycolSystemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_GlycolSystemsActionPerformed

        // Update the text
        int glycolSysIndex = _ComboBox_GlycolSystems.getSelectedIndex();
        int glycolSubSysIndex = _ComboBox_GlycolSubSystems.getSelectedIndex();
        this.updateGlycolSystemNames(glycolSysIndex);
        this.updateGlycolSubSystemNames(glycolSubSysIndex);
        // Update the display frame
        this.updateDisplay();
        // Done updating display frame
    }//GEN-LAST:event__ComboBox_GlycolSystemsActionPerformed

    private void _CheckBox_CondVFDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__CheckBox_CondVFDActionPerformed

        boolean status = _CheckBox_CondVFD.isSelected();
        cs.getRackIndex(_ComboBox_Racks.getSelectedIndex()).setCondVFDActive(status);

    }//GEN-LAST:event__CheckBox_CondVFDActionPerformed

    private void _CheckBox_CondSplitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__CheckBox_CondSplitActionPerformed

        boolean status = _CheckBox_CondSplit.isSelected();
        cs.getRackIndex(_ComboBox_Racks.getSelectedIndex()).setCondSplit(status);
    }//GEN-LAST:event__CheckBox_CondSplitActionPerformed

    private void _FormattedTF_CompVFDPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event__FormattedTF_CompVFDPropertyChange

        int val = Integer.valueOf(_FormattedTF_CompVFD.getText());
        int numComps = cs.getRackIndex(_ComboBox_Racks.getSelectedIndex())
                .getNumCompressors();

        if (val > 0 && val <= numComps) {
            cs.getRackIndex(_ComboBox_Racks.getSelectedIndex()).setCompVFD(val);
        } else if (val != 0) {
            _FormattedTF_CompVFD.setText("0");
        }
    }//GEN-LAST:event__FormattedTF_CompVFDPropertyChange

    private void _CheckBox_CompVFDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__CheckBox_CompVFDActionPerformed

        boolean status = _CheckBox_CompVFD.isSelected();
        _FormattedTF_CompVFD.setEnabled(status);
        cs.getRackIndex(_ComboBox_Racks.getSelectedIndex()).setCompVFDActive(status);


    }//GEN-LAST:event__CheckBox_CompVFDActionPerformed

    private void _FormattedTF_NumFanPanelsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event__FormattedTF_NumFanPanelsPropertyChange

        cs.setNumFanPanels(Integer.parseInt(_FormattedTF_NumFanPanels.getText()));

    }//GEN-LAST:event__FormattedTF_NumFanPanelsPropertyChange

    private void _Button_SubSysNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_SubSysNextActionPerformed

        // Save the field
        int rackIndex = _ComboBox_Racks.getSelectedIndex();
        int sgIndex = _ComboBox_SuctionGroups.getSelectedIndex();
        int subSystemIndex = _ComboBox_SubSystems.getSelectedIndex();
        String systemName = _TextField_SystemName.getText();
        String subSystemName = _TextField_SubSystemName.getText();
        Rack r = cs.getRackIndex(rackIndex);
        SuctionGroup sg = r.getSuctionGroup().get(sgIndex);
        sg.replaceSubSystemName(systemName, subSystemName, subSystemIndex);

        // Select next name
        if (subSystemIndex < sg.getNumSubSystems(systemName) - 1) {
            _ComboBox_SubSystems.setSelectedIndex(subSystemIndex + 1);
            _TextField_SubSystemName.setText(sg.getSubSystemNameIndex(systemName, subSystemIndex + 1));
        }

        // Update the display frame
        //System.out.println("button prev update");
        this.updateDisplay();
        // Done updating display frame
        // Highlight the text field
        this._TextField_SubSystemName.requestFocus();
        this._TextField_SubSystemName.selectAll();
    }//GEN-LAST:event__Button_SubSysNextActionPerformed

    private void _Button_SubSysPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_SubSysPrevActionPerformed

        // Save the field
        int rackIndex = _ComboBox_Racks.getSelectedIndex();
        int sgIndex = _ComboBox_SuctionGroups.getSelectedIndex();
        int subSystemIndex = _ComboBox_SubSystems.getSelectedIndex();
        String systemName = _TextField_SystemName.getText();
        String subSystemName = _TextField_SubSystemName.getText();
        Rack r = cs.getRackIndex(rackIndex);
        SuctionGroup sg = r.getSuctionGroup().get(sgIndex);
        sg.replaceSubSystemName(systemName, subSystemName, subSystemIndex);

        // Select previous name
        if (subSystemIndex > 0) {
            _ComboBox_SubSystems.setSelectedIndex(subSystemIndex - 1);
            _TextField_SubSystemName.setText(sg.getSubSystemNameIndex(systemName, subSystemIndex - 1));
        }

        // Update the display frame
        //System.out.println("button prev update");
        this.updateDisplay();
        // Done updating display frame
        // Highlight the text field
        this._TextField_SubSystemName.requestFocus();
        this._TextField_SubSystemName.selectAll();
    }//GEN-LAST:event__Button_SubSysPrevActionPerformed

    private void _ComboBox_SubSystemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_SubSystemsActionPerformed

        // Update the text        
        int subSystemIndex = _ComboBox_SubSystems.getSelectedIndex();
        this.updateSubSystemNames(subSystemIndex);
        this.updateDisplay();
    }//GEN-LAST:event__ComboBox_SubSystemsActionPerformed

    private void _Button_GlycolSubSysNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_GlycolSubSysNextActionPerformed

        // Save the field        
        int glycolSubSystemIndex = _ComboBox_GlycolSubSystems.getSelectedIndex();
        String glycolSystemName = _TextField_GlycolSystemName.getText();
        String glycolSubSystemName = _TextField_GlycolSubSystemName.getText();

        GlycolSettings gs = cs.getGlycolSettings();
        gs.replaceGlycolSubSystemName(glycolSystemName, glycolSubSystemName, glycolSubSystemIndex);

        // Select previous name        
        if (glycolSubSystemIndex < gs.getNumSubSystems(glycolSystemName) - 1) {
            _ComboBox_GlycolSubSystems.setSelectedIndex(glycolSubSystemIndex + 1);
            _TextField_GlycolSubSystemName.setText(gs.getSubSystemNameIndex(glycolSystemName, glycolSubSystemIndex + 1));
        }

        // Update the display frame
        //System.out.println("button prev update");
        this.updateDisplay();
        // Done updating display frame
        // Highlight the text field
        this._TextField_GlycolSubSystemName.requestFocus();
        this._TextField_GlycolSubSystemName.selectAll();
    }//GEN-LAST:event__Button_GlycolSubSysNextActionPerformed

    private void _Button_GlycolSubSysPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_GlycolSubSysPrevActionPerformed

        // Save the field        
        int glycolSubSystemIndex = _ComboBox_GlycolSubSystems.getSelectedIndex();
        String glycolSystemName = _TextField_GlycolSystemName.getText();
        String glycolSubSystemName = _TextField_GlycolSubSystemName.getText();

        GlycolSettings gs = cs.getGlycolSettings();
        gs.replaceGlycolSubSystemName(glycolSystemName, glycolSubSystemName, glycolSubSystemIndex);

        // Select previous name
        if (glycolSubSystemIndex > 0) {
            _ComboBox_GlycolSubSystems.setSelectedIndex(glycolSubSystemIndex - 1);
            _TextField_GlycolSubSystemName.setText(gs.getSubSystemNameIndex(glycolSystemName, glycolSubSystemIndex - 1));
        }

        // Update the display frame
        //System.out.println("button prev update");
        this.updateDisplay();
        // Done updating display frame
        // Highlight the text field
        this._TextField_GlycolSubSystemName.requestFocus();
        this._TextField_GlycolSubSystemName.selectAll();
    }//GEN-LAST:event__Button_GlycolSubSysPrevActionPerformed

    private void _ComboBox_GlycolSubSystemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_GlycolSubSystemsActionPerformed
        // Update the text        
        int glycolSubSystemIndex = _ComboBox_GlycolSubSystems.getSelectedIndex();
        this.updateGlycolSubSystemNames(glycolSubSystemIndex);
        this.updateDisplay();
    }//GEN-LAST:event__ComboBox_GlycolSubSystemsActionPerformed

    private void _FTF_NumGlycolSubSystemsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event__FTF_NumGlycolSubSystemsPropertyChange
        try {
            this.updateGlycolSubSystemCount();
            // update the system names fields
            this.updateGlycolSubSystemNames(_ComboBox_GlycolSubSystems.getSelectedIndex());

            // Update the display frame
            //System.out.println("slider systems update");
            this.updateDisplay();
            // Done updating display frame
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event__FTF_NumGlycolSubSystemsPropertyChange

    private void _FTF_NumSubSystemsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event__FTF_NumSubSystemsPropertyChange

        try {
            this.updateSubSystemCount();
            // update the system names fields
            this.updateSubSystemNames(_ComboBox_SubSystems.getSelectedIndex());

            // Update the display frame
            //System.out.println("slider systems update");
            this.updateDisplay();
            // Done updating display frame
        } catch (NumberFormatException e) {

        }

    }//GEN-LAST:event__FTF_NumSubSystemsPropertyChange

    /**
     * loads the combo box for racks
     *
     * @param prevSelectedIndex the previously selected index of the combo box
     */
    public void loadComboBoxRacks(int prevSelectedIndex) {

        // Update the combo box
        _ComboBox_Racks.setModel(new javax.swing.DefaultComboBoxModel(getRackNames()));

        if (prevSelectedIndex <= numRacks - 1) {
            _ComboBox_Racks.setSelectedIndex(prevSelectedIndex);
        } else {
            _ComboBox_Racks.setSelectedIndex(0);
        }

        _Label_RackSelected.setText(_ComboBox_Racks.getSelectedItem() + " Options");

        this.loadRackOptions(_ComboBox_Racks.getSelectedIndex());

    }

    /**
     * loads the options for racks
     *
     * @param index the previously selected index of the combo box
     */
    public void loadRackOptions(int index) {

        // Load all the options for the index'd rack
        Rack cr = cs.getRackIndex(index);
        numFans = cr.getNumCondenserFans();
        numSG = cr.getNumSuctionGroups();

        // Comp VFD
        _CheckBox_CompVFD.setSelected(cr.isCompVFDActive());
        _FormattedTF_CompVFD.setEnabled(cr.isCompVFDActive());
        _FormattedTF_CompVFD.setValue(cr.getCompVFD());

        // Cond VFD
        _CheckBox_CondSplit.setSelected(cr.isCondSplit());
        _CheckBox_CondVFD.setSelected(cr.isCondVFDActive());

        // Fan Panels
        _FormattedTF_NumFanPanels.setText("" + cs.getNumFanPanels());

        // Fans | Suction groups
        _FormattedTF_NumFans.setText("" + numFans);
        _FormattedTF_NumSG.setText("" + numSG);
        this.loadComboBoxSuctionGroups(0);
    }

    public void loadGlycolSettings() {

        glycolSetting(cs.glycolStore);
        _FormattedTF_NumGlycolSystems.setText(String.valueOf(cs.glycolSettings.getNumGlycolSystems()));
        updateGlycolSystemCount();
        updateGlycolSystemNames(0);
    }

    /**
     * loads the combo box for suction groups
     *
     * @param prevSelectedIndex the previously selected index of the combo box
     */
    public void loadComboBoxSuctionGroups(int prevSelectedIndex) {

        int rackIndex = _ComboBox_Racks.getSelectedIndex();
        int sgNum = cs.getRackIndex(rackIndex).getNumSuctionGroups();

        String[] sgNames = cs.getRackIndex(rackIndex).getSuctionGroupNames();

        // Update the combo box
        _ComboBox_SuctionGroups.setModel(new javax.swing.DefaultComboBoxModel(sgNames));

        if (prevSelectedIndex <= sgNum - 1) {
            _ComboBox_SuctionGroups.setSelectedIndex(prevSelectedIndex);
        } else {
            _ComboBox_SuctionGroups.setSelectedIndex(0);
        }

        _Label_SGOptions.setText(_ComboBox_SuctionGroups.getSelectedItem() + " Options");

        this.loadSuctionGroupOptions(_ComboBox_SuctionGroups.getSelectedIndex());

    }

    /**
     * loads the options for suction group
     *
     * @param index the previously selected index of the combo box
     */
    public void loadSuctionGroupOptions(int index) {

        // Load the suction group 
        int rackIndex = _ComboBox_Racks.getSelectedIndex();
        int sgIndex = _ComboBox_SuctionGroups.getSelectedIndex();

        SuctionGroup sg = cs.getRackIndex(rackIndex).getSuctionGroupIndex(sgIndex);
        numComp = sg.getNumCompressors();
        numSystems = sg.getNumSystems();
        _FormattedTF_NumComp.setText("" + numComp);
        _FormattedTF_NumSystems.setText("" + numSystems);

        this.updateCompressorNames(_ComboBox_CompressorNumber.getSelectedIndex());
        this.updateSystemNames(_ComboBox_Systems.getSelectedIndex());
    }

    /**
     * updates the compressor names
     *
     * @param prevSelectedIndex previously selected index of the combo box
     */
    public void updateCompressorNames(int prevSelectedIndex) {
        // first update the combo box indicating what system names can be edited
        int rackIndex = _ComboBox_Racks.getSelectedIndex();
        int sgIndex = _ComboBox_SuctionGroups.getSelectedIndex();
        int compIndex = _ComboBox_CompressorNumber.getSelectedIndex();

        SuctionGroup sg = cs.getRackIndex(rackIndex).getSuctionGroupIndex(sgIndex);

        String[] cmp = new String[numComp];
        for (int i = 0; i < numComp; i++) {
            cmp[i] = "Compressor " + (i + 1);
        }
        _ComboBox_CompressorNumber.setModel(new javax.swing.DefaultComboBoxModel(cmp));
        if (prevSelectedIndex <= numComp - 1) {
            _ComboBox_CompressorNumber.setSelectedIndex(prevSelectedIndex);
        } else {
            _ComboBox_CompressorNumber.setSelectedIndex(0);
            compIndex = 0;
        }

        // Combo box updated, now add any system names that need to be added
        sg.addCompressorNames(Math.abs(Integer.parseInt(_FormattedTF_NumComp.getText())));
        // System drop box is set now update the text field 

        sg = cs.getRackIndex(rackIndex).getSuctionGroupIndex(sgIndex);
        _TextField_CompressorName.setText(sg.getCompressorNameIndex(compIndex));

    }

    /**
     * updates the rack names
     *
     * @param prevSelectedIndex previously selected index of the combo box
     */
    public void updateRackNames(int prevSelectedIndex) {
        // first update the combo box indicating what system names can be edited

        String[] rk = new String[numRacks];
        for (int i = 0; i < numRacks; i++) {
            rk[i] = "Rack " + (i + 1);
        }
        _ComboBox_RackNumber.setModel(new javax.swing.DefaultComboBoxModel(rk));
        if (prevSelectedIndex <= numRacks - 1) {
            _ComboBox_RackNumber.setSelectedIndex(prevSelectedIndex);
        } else {
            _ComboBox_RackNumber.setSelectedIndex(0);
        }

        // Combo box updated, now add any rack that need to be added
        addRacks();
        // System drop box is set now update the text field 

        _TextField_RackName.setText(cs.getRackIndex(_ComboBox_RackNumber.getSelectedIndex()).getName());

    }

    /**
     * adds racks if needed to
     */
    public void addRacks() {
        int size = cs.getRacks().size();
        int toAdd = numRacks - size;

        for (int i = 0; i < toAdd; i++) {
            cs.addRack(new Rack("Rack " + (size + i + 1)));
        }

    }

    /**
     * updates the system names
     *
     * @param prevSelectedIndex previously selected index of the combo box
     */
    public void updateSystemNames(int prevSelectedIndex) {
        // first update the combo box indicating what system names can be edited
        int rackIndex = _ComboBox_Racks.getSelectedIndex();
        int sgIndex = _ComboBox_SuctionGroups.getSelectedIndex();
        int systemIndex = _ComboBox_Systems.getSelectedIndex();
        SuctionGroup sg = cs.getRackIndex(rackIndex).getSuctionGroupIndex(sgIndex);

        if (numSystems == 0) {
            String[] sys = new String[]{"None"};
            _ComboBox_Systems.setModel(new javax.swing.DefaultComboBoxModel(sys));
            _ComboBox_Systems.setSelectedIndex(0);
        } else {

            String[] sys = new String[numSystems];
            for (int i = 0; i < numSystems; i++) {
                sys[i] = "System " + (i + 1);
            }
            _ComboBox_Systems.setModel(new javax.swing.DefaultComboBoxModel(sys));
            if (prevSelectedIndex <= numSystems - 1) {
                _ComboBox_Systems.setSelectedIndex(prevSelectedIndex);
                this._FTF_NumSubSystems.setText(String.valueOf(sg.getNumSubSystems(sg.getSystemNameIndex(prevSelectedIndex))));
            } else {
                this._FTF_NumSubSystems.setText(String.valueOf(sg.getNumSubSystems(sg.getSystemNameIndex(0))));
                _ComboBox_Systems.setSelectedIndex(0);
                systemIndex = 0;
            }

            // Combo box updated, now add any system names that need to be added
            sg.addSystemNames(Math.abs(Integer.parseInt(_FormattedTF_NumSystems.getText())));
            // System drop box is set now update the text field 

            _TextField_SystemName.setText(sg.getSystemNameIndex(systemIndex));
            _FTF_NumSubSystems.setText(String.valueOf(sg.getNumSubSystems(sg.getSystemNameIndex(_ComboBox_Systems.getSelectedIndex()))));
            updateSubSystemNames(prevSelectedIndex);
        }

    }

    /**
     * updates the sub system names
     *
     * @param prevSelectedIndex previously selected index of the combo box
     */
    public void updateSubSystemNames(int prevSelectedIndex) {
        // first update the combo box indicating what system names can be edited
        int rackIndex = _ComboBox_Racks.getSelectedIndex();
        int sgIndex = _ComboBox_SuctionGroups.getSelectedIndex();
        int subSystemIndex = _ComboBox_SubSystems.getSelectedIndex();
        String systemName = _TextField_SystemName.getText();
        SuctionGroup sg = cs.getRackIndex(rackIndex).getSuctionGroupIndex(sgIndex);

        int numSubSystems = sg.getNumSubSystems(systemName);
        String[] sys;
        if (numSubSystems != 0) {

            sys = new String[numSubSystems];
            for (int i = 0; i < numSubSystems; i++) {
                sys[i] = "Sub-Sys " + (i + 1);
            }
        } else {
            sys = new String[]{"None"};
        }
        _ComboBox_SubSystems.setModel(new javax.swing.DefaultComboBoxModel(sys));
        if (prevSelectedIndex <= numSubSystems - 1) {
            _ComboBox_SubSystems.setSelectedIndex(prevSelectedIndex);
            subSystemIndex = prevSelectedIndex;
        } else {
            _ComboBox_SubSystems.setSelectedIndex(0);
            subSystemIndex = 0;
        }

        // Combo box updated, now add any system names that need to be added
        //sg.addSystemNames(Math.abs(Integer.parseInt(_FormattedTF_NumSystems.getText())));
        // System drop box is set now update the text field 
        _TextField_SubSystemName.setText(sg.getSubSystemNameIndex(systemName, subSystemIndex));

    }

    /**
     * updates the system names
     *
     * @param prevSelectedIndex previously selected index of the combo box
     */
    public void updateGlycolSystemNames(int prevSelectedIndex) {
        // first update the combo box indicating what system names can be edited
        int numGlycolSys = cs.glycolSettings.getNumGlycolSystems();

        String[] sys = new String[numGlycolSys];
        for (int i = 0; i < numGlycolSys; i++) {
            sys[i] = "G" + (i < 9 ? "0" + (i + 1) : (i + 1)); // Add a 0 infront of the system if its before 10
        }
        GlycolSettings gs = cs.getGlycolSettings();
        _ComboBox_GlycolSystems.setModel(new javax.swing.DefaultComboBoxModel(sys));
        if (prevSelectedIndex <= numGlycolSys - 1) {
            _ComboBox_GlycolSystems.setSelectedIndex(prevSelectedIndex);
            this._FTF_NumGlycolSubSystems.setText(String.valueOf(gs.getNumSubSystems(gs.getGlycolSystemNameIndex(prevSelectedIndex))));

        } else {
            _ComboBox_GlycolSystems.setSelectedIndex(0);
            this._FTF_NumGlycolSubSystems.setText(String.valueOf(gs.getNumSubSystems(gs.getGlycolSystemNameIndex(0))));
        }

        // Combo box updated, now add any system names that need to be added
        cs.glycolSettings.addGlycolSystemNames(Math.abs(Integer.parseInt(_FormattedTF_NumGlycolSystems.getText())));
        // System drop box is set now update the text field 

        _TextField_GlycolSystemName.setText(cs.glycolSettings.getGlycolSystemNameIndex(_ComboBox_GlycolSystems.getSelectedIndex()));
        _FTF_NumGlycolSubSystems.setText(String.valueOf(cs.glycolSettings.getNumSubSystems(cs.glycolSettings.getGlycolSystemNameIndex(_ComboBox_GlycolSystems.getSelectedIndex()))));
        updateGlycolSubSystemNames(prevSelectedIndex);

    }

    /**
     * updates the glycol sub system names
     *
     * @param prevSelectedIndex previously selected index of the combo box
     */
    public void updateGlycolSubSystemNames(int prevSelectedIndex) {
        // first update the combo box indicating what system names can be edited

        int glycolSubSystemIndex = _ComboBox_GlycolSubSystems.getSelectedIndex();
        String glycolSystemName = _TextField_GlycolSystemName.getText();
        GlycolSettings gs = cs.getGlycolSettings();

        int numSubSystems = gs.getNumSubSystems(glycolSystemName);

        String[] sys;
        if (numSubSystems != 0) {

            sys = new String[numSubSystems];
            for (int i = 0; i < numSubSystems; i++) {
                sys[i] = "Glycol Sub-Sys " + (i + 1);
            }
        } else {
            sys = new String[]{"None"};
        }

        _ComboBox_GlycolSubSystems.setModel(new javax.swing.DefaultComboBoxModel(sys));
        if (prevSelectedIndex <= numSubSystems - 1) {
            _ComboBox_GlycolSubSystems.setSelectedIndex(prevSelectedIndex);
            glycolSubSystemIndex = prevSelectedIndex;

        } else {
            _ComboBox_GlycolSubSystems.setSelectedIndex(0);
            glycolSubSystemIndex = 0;

        }

        // Combo box updated, now add any system names that need to be added
        //sg.addSystemNames(Math.abs(Integer.parseInt(_FormattedTF_NumSystems.getText())));
        // System drop box is set now update the text field 
        _TextField_GlycolSubSystemName.setText(gs.getSubSystemNameIndex(glycolSystemName, glycolSubSystemIndex));

    }

    /**
     * removes the string of the store logo
     */
    public void removeStoreLogo() {
        cs.setImgStr("");
        _Label_StoreLogo.setIcon(null);
        _Label_StoreLogo.setText("Store Logo");
        this.updateDisplay();
    }

    /**
     * updates the store logo based on the string stored
     */
    public void updateStoreLogo() {
        try {
            ImageIcon icon = new ImageIcon(cs.getImgStr());
            _Label_StoreLogo.setText("");
            _Label_StoreLogo.setIcon(icon);
        } catch (Exception e) {
            _Label_StoreLogo.setText("Problem loading file: " + cs.getImgStr());
        }
        this.updateDisplay();
    }

    /**
     * updates the store logo
     *
     * @param img file path of the logo
     */
    public void updateStoreLogo(String img) {
        try {
            cs.setImgStr(img);
            ImageIcon icon = new ImageIcon(cs.getImgStr());
            _Label_StoreLogo.setText("");
            _Label_StoreLogo.setIcon(icon);
        } catch (Exception e) {
            _Label_StoreLogo.setText("Problem loading file: " + cs.getImgStr());
        }
        this.updateDisplay();
    }

    /**
     * gets the rack names from the array list
     *
     * @return string array of the rack names
     */
    public String[] getRackNames() {
        String[] names = new String[numRacks];
        for (int i = 0; i < numRacks; i++) {
            names[i] = cs.getRackIndex(i).getName();
        }
        return names;
    }

    /**
     * updates the main frame display with the stored information
     */
    public void updateDisplay() {
        mf.updateDisplay(this.cs);
    }

    /**
     * update the rack count based on the text field
     *
     * @throws NumberFormatException for badly formatted text fields
     */
    public void updateRackCount() throws NumberFormatException {

        numRacks = Math.abs(Integer.parseInt(_FormattedTF_NumRacks.getText()));
        if (numRacks > 8) {
            numRacks = 8;
            _FormattedTF_NumRacks.setValue(new Integer("8"));
        } else if (numRacks == 0) {
            _FormattedTF_NumRacks.setValue(1);
            _FormattedTF_NumRacks.setValue(new Integer("1"));
        }
        cs.setNumRacks(numRacks);

    }

    /**
     * update the fan count based on the text field
     *
     * @throws NumberFormatException for badly formatted text fields
     */
    public void updateFanCount() throws NumberFormatException {
        numFans = Math.abs(Integer.parseInt(_FormattedTF_NumFans.getText()));
        if (numFans > 20) {
            numFans = 20;
            _FormattedTF_NumFans.setValue(new Integer("20"));
        } else if (numFans == 0) {
            numFans = 1;
            _FormattedTF_NumFans.setValue(new Integer("1"));
        }

    }

    /**
     * update the suction group count based on the text field
     *
     * @throws NumberFormatException for badly formatted text fields
     */
    public void updateSGCount() throws NumberFormatException {
        numSG = Math.abs(Integer.parseInt(_FormattedTF_NumSG.getText()));
        if (numSG > 5) {
            numSG = 5;
            _FormattedTF_NumSG.setValue(new Integer("5"));
        } else if (numSG == 0) {
            numSG = 1;
            _FormattedTF_NumSG.setValue(new Integer("1"));
        }
    }

    /**
     * update the comp count based on the text field
     *
     * @throws NumberFormatException for badly formatted text fields
     */
    public void updateCompCount() throws NumberFormatException {
        numComp = Math.abs(Integer.parseInt(_FormattedTF_NumComp.getText()));
        if (numComp > 60) {
            numComp = 60;
            _FormattedTF_NumComp.setValue(new Integer("60"));
        } else if (numComp == 0) {
            numComp = 1;
            _FormattedTF_NumComp.setValue(new Integer("1"));
        }
        cs.getRackIndex(_ComboBox_Racks.getSelectedIndex()).getSuctionGroupIndex(_ComboBox_SuctionGroups.getSelectedIndex()).setNumCompressors(numComp);
    }

    /**
     * update the system count based on the text field
     *
     * @throws NumberFormatException for badly formatted text fields
     */
    public void updateSystemCount() throws NumberFormatException {
        numSystems = Math.abs(Integer.parseInt(_FormattedTF_NumSystems.getText()));
        if (numSystems > 60) {
            numSystems = 60;
            _FormattedTF_NumSystems.setValue(new Integer("60"));
        } else if (numSystems <= 0) {
            numSystems = 0;
            _FormattedTF_NumSystems.setValue(new Integer("0"));
        }
        cs.getRackIndex(_ComboBox_Racks.getSelectedIndex()).getSuctionGroupIndex(_ComboBox_SuctionGroups.getSelectedIndex()).setNumSystems(numSystems);
    }

    /**
     * update the sub system count based on the text field
     *
     * @throws NumberFormatException for badly formatted text fields
     */
    public void updateSubSystemCount() throws NumberFormatException {
        int numSubSystems = Math.abs(Integer.parseInt(_FTF_NumSubSystems.getText()));
        if (numSubSystems > 10) {
            numSubSystems = 10;
            _FTF_NumSubSystems.setValue(new Integer("10"));
        } else if (numSubSystems < 0) {
            numSubSystems = 0;
            _FTF_NumSubSystems.setValue(new Integer("0"));
        }

        String systemName = _TextField_SystemName.getText();
        cs.getRackIndex(_ComboBox_Racks.getSelectedIndex())
                .getSuctionGroupIndex(_ComboBox_SuctionGroups.getSelectedIndex())
                .setNumSubSystems(systemName, numSubSystems);

    }

    /**
     * update the glycol sub system count based on the text field
     *
     * @throws NumberFormatException for badly formatted text fields
     */
    public void updateGlycolSubSystemCount() throws NumberFormatException {
        int numGlycolSubSystems = Math.abs(Integer.parseInt(_FTF_NumGlycolSubSystems.getText()));
        if (numGlycolSubSystems > 10) {
            numGlycolSubSystems = 10;
            _FTF_NumGlycolSubSystems.setValue(new Integer("10"));
        } else if (numGlycolSubSystems < 0) {
            numGlycolSubSystems = 0;
            _FTF_NumGlycolSubSystems.setValue(new Integer("0"));
        }

        String glycolSystemName = _TextField_GlycolSystemName.getText();
        cs.getGlycolSettings().setNumSubSystems(glycolSystemName, numGlycolSubSystems);

    }

    /**
     * update the system count based on the text field
     *
     * @throws NumberFormatException for badly formatted text fields
     */
    public void updateGlycolSystemCount() throws NumberFormatException {
        int glycolSystems = Math.abs(Integer.parseInt(_FormattedTF_NumGlycolSystems.getText()));
        if (glycolSystems > 50) {
            glycolSystems = 50;
            _FormattedTF_NumGlycolSystems.setValue(new Integer("50"));
        } else if (glycolSystems == 0) {
            glycolSystems = 1;
            _FormattedTF_NumGlycolSystems.setValue(new Integer("1"));
        } else {
            _FormattedTF_NumGlycolSystems.setValue(glycolSystems);
        }
        cs.glycolSettings.setNumGlycolSystems(glycolSystems);
    }

    public void loadSubSystems() {
        this.updateSystemNames(0);
        this.updateSubSystemNames(0);

    }

    public void loadGlycolSubSystems() {
        this.updateGlycolSystemNames(0);
        this.updateGlycolSubSystemNames(0);
    }

    /**
     * _ComboBox_SuctionGroups.getSelectedIndex()).setNumSystems(numSystems); }
     *
     * /**
     * Loads the store from the menu
     *
     * @param cs
     */
    public void loadControlSettings(ControlSettings cs) {
        this.cs = cs;
        this.updateRackDisplay();

    }

    /**
     * updates the rack display
     */
    public void updateRackDisplay() {

        _TextField_SiteName.setText(this.cs.getStoreName());
        numRacks = this.cs.getNumRacks();
        _FormattedTF_NumRacks.setText(String.valueOf(numRacks));
        this.updateStoreLogo();
        this.updateRackNames(0);
        this.loadComboBoxRacks(0);
        this.loadGlycolSettings();
        this.updateDisplay();
    }

    /**
     * Write to the control log
     *
     * @param s String to add to the log
     */
    public void writeToLog(String s) {
        _TextArea_Log.append(s + "\n");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton _Button_CompNext;
    private javax.swing.JButton _Button_CompPrev;
    private javax.swing.JButton _Button_GlycolSubSysNext;
    private javax.swing.JButton _Button_GlycolSubSysPrev;
    private javax.swing.JButton _Button_GlycolSysNext;
    private javax.swing.JButton _Button_GlycolSysPrev;
    private javax.swing.JButton _Button_RackNext;
    private javax.swing.JButton _Button_RackPrev;
    private javax.swing.JButton _Button_SubSysNext;
    private javax.swing.JButton _Button_SubSysPrev;
    private javax.swing.JButton _Button_SysNext;
    private javax.swing.JButton _Button_SysPrev;
    private javax.swing.JCheckBox _CheckBox_CompVFD;
    private javax.swing.JCheckBox _CheckBox_CondSplit;
    private javax.swing.JCheckBox _CheckBox_CondVFD;
    private javax.swing.JCheckBox _CheckBox_Glycol;
    private javax.swing.JComboBox _ComboBox_CompressorNumber;
    private javax.swing.JComboBox _ComboBox_GlycolSubSystems;
    private javax.swing.JComboBox _ComboBox_GlycolSystems;
    private javax.swing.JComboBox _ComboBox_RackNumber;
    private javax.swing.JComboBox _ComboBox_Racks;
    private javax.swing.JComboBox _ComboBox_SubSystems;
    private javax.swing.JComboBox _ComboBox_SuctionGroups;
    private javax.swing.JComboBox _ComboBox_Systems;
    private javax.swing.JFormattedTextField _FTF_NumGlycolSubSystems;
    private javax.swing.JFormattedTextField _FTF_NumSubSystems;
    private javax.swing.JFormattedTextField _FormattedTF_CompVFD;
    private javax.swing.JFormattedTextField _FormattedTF_NumComp;
    private javax.swing.JFormattedTextField _FormattedTF_NumFanPanels;
    private javax.swing.JFormattedTextField _FormattedTF_NumFans;
    private javax.swing.JFormattedTextField _FormattedTF_NumGlycolSystems;
    private javax.swing.JFormattedTextField _FormattedTF_NumRacks;
    private javax.swing.JFormattedTextField _FormattedTF_NumSG;
    private javax.swing.JFormattedTextField _FormattedTF_NumSystems;
    private javax.swing.JLabel _Label_CompressorName;
    private javax.swing.JLabel _Label_CompressorNumber;
    private javax.swing.JLabel _Label_Compressors;
    private javax.swing.JLabel _Label_CompressorsVFD;
    private javax.swing.JLabel _Label_CondenserFans;
    private javax.swing.JLabel _Label_Glycol;
    private javax.swing.JLabel _Label_GlycolSystemName;
    private javax.swing.JLabel _Label_NumberFanPanels;
    private javax.swing.JLabel _Label_NumberGlycolSystems;
    private javax.swing.JLabel _Label_NumberRacks;
    private javax.swing.JLabel _Label_NumberSuctionGroups;
    private javax.swing.JLabel _Label_NumberSystems;
    private javax.swing.JLabel _Label_RackName;
    private javax.swing.JLabel _Label_RackNumber;
    private javax.swing.JLabel _Label_RackSelected;
    private javax.swing.JLabel _Label_SGOptions;
    private javax.swing.JLabel _Label_Site;
    private javax.swing.JLabel _Label_StoreLogo;
    private javax.swing.JLabel _Label_SuctionGroupName;
    private javax.swing.JLabel _Label_SuctionGroupOptions;
    private javax.swing.JLabel _Label_SystemName;
    private javax.swing.JLabel _Label_SystemName1;
    private javax.swing.JLabel _Label_SystemName2;
    private javax.swing.JLabel _Label_SystemNumber;
    private javax.swing.JLabel _Label_SystemNumber1;
    private javax.swing.JLabel _Label_SystemNumber2;
    private javax.swing.JLabel _Label_SystemNumber3;
    private javax.swing.JLabel _Label_SystemNumber4;
    private javax.swing.JLabel _Label_SystemNumber5;
    private javax.swing.JLabel _Label_SystemSave1;
    private javax.swing.JPanel _Panel_Controls;
    private javax.swing.JPanel _Panel_NamePanel;
    private javax.swing.JScrollPane _ScrollPane_Log;
    private javax.swing.JTextArea _TextArea_Log;
    private javax.swing.JTextField _TextField_CompressorName;
    private javax.swing.JTextField _TextField_GlycolSubSystemName;
    private javax.swing.JTextField _TextField_GlycolSystemName;
    private javax.swing.JTextField _TextField_RackName;
    private javax.swing.JTextField _TextField_SiteName;
    private javax.swing.JTextField _TextField_SubSystemName;
    private javax.swing.JTextField _TextField_SuctionGroupName;
    private javax.swing.JTextField _TextField_SystemName;
    // End of variables declaration//GEN-END:variables

}
