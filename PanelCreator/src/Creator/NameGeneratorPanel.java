/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Creator;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import javax.swing.DefaultListModel;

/**
 *
 * @author EricGummerson
 */
public class NameGeneratorPanel extends javax.swing.JPanel {

    public MainFrame mf;
    private Scanner scan;
    private int comboBoxIndex;
    public IoNames ioNames;
    private DefaultListModel listModel;

    /**
     * Creates new form NameGeneratorPanel
     *
     * @param mf
     * @param ioNames
     */
    public NameGeneratorPanel(MainFrame mf, IoNames ioNames) {
        this.mf = mf;
        this.ioNames = ioNames;
        comboBoxIndex = 0;
        listModel = new DefaultListModel();
        initComponents();

    }

    public IoNames getIoNames() {
        return ioNames;
    }

    public void setIoNames(IoNames ioNames) {
        this.ioNames = ioNames;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        _Label_Title = new javax.swing.JLabel();
        _ComboBox_Groups = new javax.swing.JComboBox();
        _Button_Save = new javax.swing.JButton();
        _Label_GroupName = new javax.swing.JLabel();
        _ScrollPane_InfoRacks = new javax.swing.JScrollPane();
        _TextArea_Info = new javax.swing.JTextArea();
        _ScrollPane_List = new javax.swing.JScrollPane();
        _List_Variables = new javax.swing.JList();
        _Panel_SelectedItemInfo = new javax.swing.JPanel();
        _Textfield_Name = new javax.swing.JTextField();
        _Label_name = new javax.swing.JLabel();
        _Label_type = new javax.swing.JLabel();
        _FTF_DisplayedValue = new javax.swing.JFormattedTextField();
        _ComboBox_Type = new javax.swing.JComboBox();
        _Label_valueDisplayed = new javax.swing.JLabel();
        _Label_uom = new javax.swing.JLabel();
        _TextField_UoM = new javax.swing.JTextField();
        _Label_constant = new javax.swing.JLabel();
        _FTF_Constant = new javax.swing.JFormattedTextField();
        _Label_offset = new javax.swing.JLabel();
        _FTF_Offset = new javax.swing.JFormattedTextField();
        _Label_constant1 = new javax.swing.JLabel();
        _FTF_AlertLow = new javax.swing.JFormattedTextField();
        _Label_alertHigh = new javax.swing.JLabel();
        _FTF_AlertHigh = new javax.swing.JFormattedTextField();
        _Label_Alert = new javax.swing.JLabel();
        _CheckBox_Alert = new javax.swing.JCheckBox();
        _Button_SaveSelected = new javax.swing.JButton();
        _Button_Check = new javax.swing.JButton();
        _Button_Defaults = new javax.swing.JButton();
        _Button_NewName = new javax.swing.JButton();
        _FTF_DecimalPlaces = new javax.swing.JFormattedTextField();
        _Label_decimalPlaces = new javax.swing.JLabel();
        _CheckBox_DataLog = new javax.swing.JCheckBox();

        setMinimumSize(new java.awt.Dimension(972, 555));

        _Label_Title.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        _Label_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_Title.setText("IO Variable Name Generator");

        _ComboBox_Groups.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _ComboBox_Groups.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Store", "Rack", "Condenser", "Suction Group", "Compressor", "System", "Other" }));
        _ComboBox_Groups.setToolTipText("Groups");
        _ComboBox_Groups.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_GroupsActionPerformed(evt);
            }
        });

        _Button_Save.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Button_Save.setText("Save All Variables");
        _Button_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_SaveActionPerformed(evt);
            }
        });

        _Label_GroupName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        _Label_GroupName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _Label_GroupName.setText("Group Name");

        _TextArea_Info.setEditable(false);
        _TextArea_Info.setColumns(20);
        _TextArea_Info.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        _TextArea_Info.setLineWrap(true);
        _TextArea_Info.setRows(5);
        _TextArea_Info.setWrapStyleWord(true);
        _ScrollPane_InfoRacks.setViewportView(_TextArea_Info);

        _List_Variables.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        _List_Variables.setModel(listModel);
        _List_Variables.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        _List_Variables.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                _List_VariablesValueChanged(evt);
            }
        });
        _ScrollPane_List.setViewportView(_List_Variables);

        _Textfield_Name.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Textfield_Name.setText("IO Name");
        _Textfield_Name.setToolTipText("io_name Field");

        _Label_name.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_name.setText("Name");

        _Label_type.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_type.setText("Type");

        _FTF_DisplayedValue.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        _FTF_DisplayedValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_DisplayedValue.setText("1");
        _FTF_DisplayedValue.setToolTipText("io_value_displayed Field");
        _FTF_DisplayedValue.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _ComboBox_Type.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _ComboBox_Type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Digital Input", "Analog Input", "Digital Output", "Analog Output" }));
        _ComboBox_Type.setToolTipText("io_type Field");
        _ComboBox_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _ComboBox_TypeActionPerformed(evt);
            }
        });

        _Label_valueDisplayed.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_valueDisplayed.setText("Displayed");

        _Label_uom.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_uom.setText("UoM");

        _TextField_UoM.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _TextField_UoM.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _TextField_UoM.setText("A");
        _TextField_UoM.setToolTipText("io_unit_of_measure Field");

        _Label_constant.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_constant.setText("Constant");

        _FTF_Constant.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        _FTF_Constant.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_Constant.setText("1");
        _FTF_Constant.setToolTipText("io_constant Field");
        _FTF_Constant.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_offset.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_offset.setText("Offset");

        _FTF_Offset.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        _FTF_Offset.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_Offset.setText("0");
        _FTF_Offset.setToolTipText("io_offset Field");
        _FTF_Offset.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_constant1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_constant1.setText("Alert Range Low");

        _FTF_AlertLow.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        _FTF_AlertLow.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_AlertLow.setText("0");
        _FTF_AlertLow.setToolTipText("io_alert_range_low Field");
        _FTF_AlertLow.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_alertHigh.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_alertHigh.setText("Alert Range High");

        _FTF_AlertHigh.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        _FTF_AlertHigh.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_AlertHigh.setText("0");
        _FTF_AlertHigh.setToolTipText("io_alert_range_high Field");
        _FTF_AlertHigh.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_Alert.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_Alert.setText("Alert");

        _CheckBox_Alert.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _CheckBox_Alert.setText("No");
        _CheckBox_Alert.setToolTipText("io_alert field, check to generate alerts");
        _CheckBox_Alert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _CheckBox_AlertActionPerformed(evt);
            }
        });

        _Button_SaveSelected.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Button_SaveSelected.setText("Save");
        _Button_SaveSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_SaveSelectedActionPerformed(evt);
            }
        });

        _Button_Check.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Button_Check.setText("Check Formatting");
        _Button_Check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_CheckActionPerformed(evt);
            }
        });

        _Button_Defaults.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Button_Defaults.setText("Default Variables");
        _Button_Defaults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_DefaultsActionPerformed(evt);
            }
        });

        _Button_NewName.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Button_NewName.setText("New");
        _Button_NewName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _Button_NewNameActionPerformed(evt);
            }
        });

        _FTF_DecimalPlaces.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        _FTF_DecimalPlaces.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        _FTF_DecimalPlaces.setText("2");
        _FTF_DecimalPlaces.setToolTipText("io_num_digits Field");
        _FTF_DecimalPlaces.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        _Label_decimalPlaces.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _Label_decimalPlaces.setText("Decimal Places");

        _CheckBox_DataLog.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        _CheckBox_DataLog.setText("Log Data");

        javax.swing.GroupLayout _Panel_SelectedItemInfoLayout = new javax.swing.GroupLayout(_Panel_SelectedItemInfo);
        _Panel_SelectedItemInfo.setLayout(_Panel_SelectedItemInfoLayout);
        _Panel_SelectedItemInfoLayout.setHorizontalGroup(
            _Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(_Label_valueDisplayed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(_Label_constant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(_Label_offset, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                    .addComponent(_Label_uom, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(_FTF_Constant)
                                    .addComponent(_FTF_Offset, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .addComponent(_TextField_UoM, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .addComponent(_FTF_DisplayedValue))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(_Label_alertHigh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                    .addComponent(_Label_constant1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(_Label_Alert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(_Label_decimalPlaces, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(_FTF_AlertHigh, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(_CheckBox_Alert, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                                        .addComponent(_FTF_AlertLow, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                        .addComponent(_FTF_DecimalPlaces))))
                            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(_CheckBox_DataLog)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_Button_Check, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(_Button_Defaults, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_Button_SaveSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_Button_NewName, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addComponent(_Label_type, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(_ComboBox_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addComponent(_Label_name, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(_Textfield_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        _Panel_SelectedItemInfoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {_CheckBox_Alert, _FTF_AlertHigh, _FTF_AlertLow, _FTF_Constant, _FTF_Offset, _TextField_UoM});

        _Panel_SelectedItemInfoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {_Button_Check, _Button_Defaults, _Button_SaveSelected});

        _Panel_SelectedItemInfoLayout.setVerticalGroup(
            _Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                        .addComponent(_Button_NewName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_Button_SaveSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_Button_Check, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_Button_Defaults, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_Label_name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_Textfield_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_Label_type, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_ComboBox_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_CheckBox_DataLog))
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_Label_valueDisplayed, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_FTF_DisplayedValue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(_Panel_SelectedItemInfoLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(_Label_decimalPlaces, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(_FTF_DecimalPlaces, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_Label_uom, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_TextField_UoM, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_Label_Alert, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_CheckBox_Alert, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_Label_constant, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_FTF_Constant, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_Label_constant1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_FTF_AlertLow, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(_Panel_SelectedItemInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_Label_offset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_FTF_Offset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_Label_alertHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_FTF_AlertHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        _Panel_SelectedItemInfoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {_CheckBox_Alert, _FTF_AlertHigh, _FTF_AlertLow, _FTF_Constant, _FTF_DisplayedValue, _FTF_Offset, _Label_Alert, _Label_alertHigh, _Label_constant, _Label_constant1, _Label_offset, _Label_uom, _Label_valueDisplayed, _TextField_UoM});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(_ScrollPane_InfoRacks)
                    .addComponent(_Panel_SelectedItemInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(_ScrollPane_List, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(_Label_GroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(_ComboBox_Groups, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(131, 131, 131)
                            .addComponent(_Button_Save))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(352, 352, 352)
                .addComponent(_Label_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(_Label_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(_Panel_SelectedItemInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(_ScrollPane_InfoRacks))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(_Label_GroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(_Button_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_ComboBox_Groups, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(_ScrollPane_List, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 53, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void _ComboBox_GroupsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_GroupsActionPerformed
        // TODO add your handling code here:
        // Parse the text field, save it
        parseVarNames();
        update();
        comboBoxIndex = _ComboBox_Groups.getSelectedIndex();
    }//GEN-LAST:event__ComboBox_GroupsActionPerformed

    private void _Button_CheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_CheckActionPerformed
        // TODO add your handling code here:
        System.out.println("TODO: check formats");
        parseVarNames();
    }//GEN-LAST:event__Button_CheckActionPerformed

    private void _Button_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_SaveActionPerformed
        // TODO add your handling code here:
        // Parse the fields
        parseVarNames();
        mf.updateVarNames(ioNames);

    }//GEN-LAST:event__Button_SaveActionPerformed

    private void _Button_DefaultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_DefaultsActionPerformed
        // TODO add your handling code here:
        loadGroups();
    }//GEN-LAST:event__Button_DefaultsActionPerformed

    private void _List_VariablesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event__List_VariablesValueChanged
        // TODO add your handling code here:
        // Load the item that has been clicked
        if (!evt.getValueIsAdjusting()) {
            String item = (String) _List_Variables.getSelectedValue();
            if (item != null) {
                loadItem(item.split(","));
            }

        }

    }//GEN-LAST:event__List_VariablesValueChanged

    private void _ComboBox_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__ComboBox_TypeActionPerformed
        // TODO add your handling code here:
        if (_ComboBox_Type.getSelectedIndex() == 1 || _ComboBox_Type.getSelectedIndex() == 3) {
            boolean b = true;
            _FTF_DisplayedValue.setEnabled(b);
            _FTF_Constant.setEnabled(b);
            _FTF_Offset.setEnabled(b);
            _TextField_UoM.setEnabled(b);
            _FTF_DecimalPlaces.setEnabled(b);

        } else {
            boolean b = false;
            _FTF_DisplayedValue.setEnabled(b);
            _FTF_Constant.setEnabled(b);
            _FTF_Offset.setEnabled(b);
            _TextField_UoM.setEnabled(b);
            _FTF_DecimalPlaces.setEnabled(b);

        }
    }//GEN-LAST:event__ComboBox_TypeActionPerformed

    private void _CheckBox_AlertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__CheckBox_AlertActionPerformed
        // TODO add your handling code here:
        if (_CheckBox_Alert.isSelected()) {
            _CheckBox_Alert.setText("Yes");
        } else {
            _CheckBox_Alert.setText("No");
        }
    }//GEN-LAST:event__CheckBox_AlertActionPerformed

    private void _Button_SaveSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_SaveSelectedActionPerformed
        // TODO add your handling code here:
        if (!_List_Variables.isSelectionEmpty()) {
            int selIndex = _List_Variables.getSelectedIndex();
            String s;
            switch (_ComboBox_Groups.getSelectedIndex()) {
                case 0:
                    s = ioNames.getStoreStr().get(selIndex);
                    break;
                case 1:
                    s = ioNames.getRackStr().get(selIndex);
                    break;
                case 2:
                    s = ioNames.getCondStr().get(selIndex);
                    break;
                case 3:
                    s = ioNames.getSgStr().get(selIndex);
                    break;
                case 4:
                    s = ioNames.getCompStr().get(selIndex);
                    break;
                case 5:
                    s = ioNames.getSysStr().get(selIndex);
                    break;
                case 6:
                    s = ioNames.getExtraStr().get(selIndex);
                    break;
                default:
                    s = "Noo ting";
            }

            //System.out.println("Type switch for: " + s);

            String[] values = new String[11];
            values[0] = _Textfield_Name.getText();
            values[1] = String.valueOf(_ComboBox_Type.getSelectedIndex());
            values[2] = _FTF_DisplayedValue.getText();
            values[3] = _TextField_UoM.getText();
            values[4] = _FTF_Constant.getText();
            values[5] = _FTF_Offset.getText();
            values[6] = _FTF_DecimalPlaces.getText();
            values[7] = _CheckBox_Alert.isSelected() ? "1" : "0";
            values[8] = _FTF_AlertLow.getText();
            values[9] = _FTF_AlertHigh.getText();
            values[10] = _CheckBox_DataLog.isSelected() ? "1" : "0";

            String newString = String.join(",", values);
            //System.out.println("values read: " + newString);
            ioNames.replaceString(_ComboBox_Groups.getSelectedIndex(), selIndex, newString);
            update();

        }

    }//GEN-LAST:event__Button_SaveSelectedActionPerformed

    private void _Button_NewNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__Button_NewNameActionPerformed
        // TODO add your handling code here:

        String s = "New IO to be changed";
        ioNames.addString(_ComboBox_Groups.getSelectedIndex(), s);
        update();


    }//GEN-LAST:event__Button_NewNameActionPerformed

    public void loadItem(String[] values) {

        String full = Arrays.toString(values).replace("[", "").replace("]", "");

        if (values.length > 8) {
            _Textfield_Name.setText(values[0]);
            _ComboBox_Type.setSelectedIndex(Integer.parseInt(values[1]));
            _FTF_DisplayedValue.setText(values[2]);
            _TextField_UoM.setText(values[3]);
            _FTF_Constant.setText(values[4]);
            _FTF_Offset.setText(values[5]);
            _FTF_DecimalPlaces.setText(values[6]);

            if (values[7].equals("1")) {
                _CheckBox_Alert.setSelected(true);
                _CheckBox_Alert.setText("Yes");
            } else {
                _CheckBox_Alert.setSelected(false);
                _CheckBox_Alert.setText("No");
            }
            _FTF_AlertLow.setText(values[8]);
            _FTF_AlertHigh.setText(values[9]);
            if (values[10].equals("1")) {
                _CheckBox_DataLog.setSelected(true);                
            } else {
                _CheckBox_DataLog.setSelected(false);                
            }
        } else if (full.equals("New IO to be changed")) {
            _Textfield_Name.setText("New IO Name");
            _ComboBox_Type.setSelectedIndex(0);
            _FTF_DisplayedValue.setText("");
            _TextField_UoM.setText("");
            _FTF_Constant.setText("");
            _FTF_Offset.setText("");

            _CheckBox_Alert.setSelected(false);
            _CheckBox_Alert.setText("No");
            _FTF_AlertLow.setText("");
            _FTF_AlertHigh.setText("");
            _CheckBox_DataLog.setSelected(false); 

        } else {
            System.out.println("Not enough fields for " + values[0] + " - " + values.length);
        }

    }

    public void loadStore(IoNames ioNames) {
        this.ioNames = ioNames;
        update();
    }

    public void loadGroups() {

        ioNames = new IoNames();
        String path = "/Creator/textFiles/Default IO Variables.txt";

        InputStream loc = this.getClass().getResourceAsStream(path);
        scan = new Scanner(loc);

        String line, groupName = "";
        while (scan.hasNextLine()) {
            line = scan.nextLine();
            line = formatString(line);

            if (line == null) { // make sure it doesnt break

            } else if (line.startsWith("`gn")) {
                groupName = line.substring(3).toLowerCase();
                //System.out.println("Grouping name: " + groupName);
            } else {
                switch (groupName) {
                    case "":
                        //System.out.println("No groupname line = " + line);
                        break;
                    case "store":
                        //System.out.println("Added to Store: " + line);
                        ioNames.getStoreStr().add(line);
                        break;
                    case "rack":
                        //System.out.println("Added to Rack: " + line);
                        ioNames.getRackStr().add(line);
                        break;
                    case "condenser":
                        //System.out.println("Added to Condenser: " + line);
                        ioNames.getCondStr().add(line);
                        break;
                    case "suction group":
                        //System.out.println("Added to SuctionGroup: " + line);
                        ioNames.getSgStr().add(line);
                        break;
                    case "compressor":
                        //System.out.println("Added to Compressor: " + line);
                        ioNames.getCompStr().add(line);
                        break;
                    case "system":
                        //System.out.println("Added to System: " + line);
                        ioNames.getSysStr().add(line);
                        break;
                    default:
                        //System.out.println("Unknown groupname, added to extra" + line);
                        ioNames.getExtraStr().add(line);
                        break;
                }
            }
        }

        if (scan != null) {
            scan.close();
        }
        // update the fields
        update();
        mf.updateVarNames(ioNames);

    }

    /**
     * parse var names in the text field
     */
    public void parseVarNames() {
        ArrayList<String> varNames = getVarsFromList();
        String line = "";

        switch (comboBoxIndex) {
            case 0:
                ioNames.getStoreStr().clear();
                break;
            case 1:
                ioNames.getRackStr().clear();
                break;
            case 2:
                ioNames.getCondStr().clear();
                break;
            case 3:
                ioNames.getSgStr().clear();
                break;
            case 4:
                ioNames.getCompStr().clear();
                break;
            case 5:
                ioNames.getSysStr().clear();
                break;
            default:
                ioNames.getExtraStr().clear();
                break;
        }

        for (String s : varNames) {
            line = formatVarString(s);
            switch (comboBoxIndex) {
                case 0:
                    //System.out.println("Added to Store: " + line);
                    ioNames.getStoreStr().add(line);
                    break;
                case 1:
                    //System.out.println("Added to Rack: " + line);
                    ioNames.getRackStr().add(line);
                    break;
                case 2:
                    //System.out.println("Added to Condenser: " + line);
                    ioNames.getCondStr().add(line);
                    break;
                case 3:
                    //System.out.println("Added to SuctionGroup: " + line);
                    ioNames.getSgStr().add(line);
                    break;
                case 4:
                    //System.out.println("Added to Compressor: " + line);
                    ioNames.getCompStr().add(line);
                    break;
                case 5:
                    //System.out.println("Added to System: " + line);
                    ioNames.getSysStr().add(line);
                    break;
                default:
                    //System.out.println("Unknown groupname, added to extra" + line);
                    ioNames.getExtraStr().add(line);
                    break;
            }

        }

    }

    /**
     * Updates the text fields
     */
    public void update() {
        String info = "";
        ArrayList<String> vars = new ArrayList<>();
        switch (_ComboBox_Groups.getSelectedIndex()) {
            case 0: // store
                info = getVarInfoStore();
                for (String s : ioNames.getStoreStr()) {
                    vars.add(s);
                }
                break;
            case 1:
                info = getVarInfoRack();
                for (String s : ioNames.getRackStr()) {
                    vars.add(s);

                }
                break;
            case 2:
                info = getVarInfoCond();
                for (String s : ioNames.getCondStr()) {
                    vars.add(s);
                }
                break;
            case 3:
                info = getVarInfoSG();
                for (String s : ioNames.getSgStr()) {
                    vars.add(s);
                }
                break;
            case 4:
                info = getVarInfoComp();
                for (String s : ioNames.getCompStr()) {
                    vars.add(s);
                }
                break;
            case 5:
                info = getVarInfoSys();
                for (String s : ioNames.getSysStr()) {
                    vars.add(s);
                }
                break;
            case 6:
                info = getVarInfoExtra();
                for (String s : ioNames.getExtraStr()) {
                    vars.add(s);
                }
                break;
        }

        _Label_GroupName.setText(_ComboBox_Groups.getSelectedItem().toString() + " Var Names");
        _TextArea_Info.setText(info);
        addVarsToList(vars);
    }

    public ArrayList<String> getVarsFromList() {
        ArrayList<String> vars = new ArrayList<>();
        for (int i = 0; i < listModel.getSize(); i++) {
            vars.add((String) listModel.get(i));
        }
        return vars;
    }

    public void addVarsToList(ArrayList<String> vars) {

        listModel.removeAllElements();
        for (String s : vars) {
            listModel.addElement(s);
        }

    }

    public String getStringFromList() {
        String vars = "";

        for (int i = 0; i < _List_Variables.getModel().getSize(); i++) {
            vars += (String) _List_Variables.getModel().getElementAt(i);
            //vars += "\n";
        }
        return vars;
    }

    /**
     * formats a string input based on specific formating `name` indicates a
     * grouping `
     *
     * @param input
     * @return
     */
    public String formatVarString(String input) {
        String output;

        if (input.isEmpty()) {
            //System.out.println("Empty line");
            output = null;

        } else if (input.startsWith("\t")) {
            //System.out.println("Tab line");
            if (input.length() > 2) {
                input = input.substring(1);
                output = formatVarString(input);
            } else {
                output = null;
            }

        } else {
            output = input;
        }

        return output;

    }

    /**
     * formats a string input based on specific formating `name` indicates a
     * grouping `
     *
     * @param input
     * @return
     */
    public String formatString(String input) {
        String output;
        if (input.startsWith("`")) {
            // Make sure the follow character is not a % indicating a variable name
            if (input.charAt(1) != '%') {
                output = "`gn" + input.substring(1, input.length() - 1);

            } else {
                output = input;
            }
        } else if (input.isEmpty()) {
            //System.out.println("Empty line");
            output = null;

        } else if (input.startsWith("\t")) {
            //System.out.println("Tab line");
            if (input.length() > 2) {
                input = input.substring(1);
                output = formatString(input);
            } else {
                output = null;
            }

        } else {
            output = input;
        }

        return output;

    }

    public String getVarInfoStore() {
        String info = "";

        info += "Add store variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nEx. Outside Air Temp `%storename`"
                + "\nStore variables include:\n"
                + "%storename";

        return info;

    }

    public String getVarInfoRack() {
        String info = "";

        info += "Add rack variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nEx. Rack Status `%rackname`"
                + "\nRack variables include:\n"
                + "%storename\n%rackname\n";

        return info;

    }

    public String getVarInfoCond() {
        String info = "";

        info += "Add condenser variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nEx. Condenser Fan `%rackname` `%fannum`"
                + "\nCondenser variables include:\n"
                + "%storename\n%rackname\n%fannum\n";

        return info;

    }

    public String getVarInfoSG() {
        String info = "";

        info += "Add suction group variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nEx. Liquid Pressure `%rackname` `%sgname`"
                + "\nCondenser variables include:\n"
                + "%storename\n%rackname\n%sgname\n";

        return info;

    }

    public String getVarInfoSys() {
        String info = "";

        info += "Add system variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nEx. System Status `%rackname` `%sysname`"
                + "\nSystem variables include:\n"
                + "%storename\n%rackname\n%sgname\n%sysname\n";

        return info;

    }

    public String getVarInfoComp() {
        String info = "";

        info += "Add compressor variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nEx. Comp Status `%rackname` `%compname`"
                + "\nCompressor variables include:\n"
                + "%storename\n%rackname\n%sgname\n%compname\n";

        return info;

    }

    public String getVarInfoExtra() {
        String info = "";

        info += "Add variables to your string by wrapping the variable name"
                + "in the grave character '`'.\nAll variables in other groups can"
                + " be used in any group";

        return info;

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton _Button_Check;
    private javax.swing.JButton _Button_Defaults;
    private javax.swing.JButton _Button_NewName;
    private javax.swing.JButton _Button_Save;
    private javax.swing.JButton _Button_SaveSelected;
    private javax.swing.JCheckBox _CheckBox_Alert;
    private javax.swing.JCheckBox _CheckBox_DataLog;
    private javax.swing.JComboBox _ComboBox_Groups;
    private javax.swing.JComboBox _ComboBox_Type;
    private javax.swing.JFormattedTextField _FTF_AlertHigh;
    private javax.swing.JFormattedTextField _FTF_AlertLow;
    private javax.swing.JFormattedTextField _FTF_Constant;
    private javax.swing.JFormattedTextField _FTF_DecimalPlaces;
    private javax.swing.JFormattedTextField _FTF_DisplayedValue;
    private javax.swing.JFormattedTextField _FTF_Offset;
    private javax.swing.JLabel _Label_Alert;
    private javax.swing.JLabel _Label_GroupName;
    private javax.swing.JLabel _Label_Title;
    private javax.swing.JLabel _Label_alertHigh;
    private javax.swing.JLabel _Label_constant;
    private javax.swing.JLabel _Label_constant1;
    private javax.swing.JLabel _Label_decimalPlaces;
    private javax.swing.JLabel _Label_name;
    private javax.swing.JLabel _Label_offset;
    private javax.swing.JLabel _Label_type;
    private javax.swing.JLabel _Label_uom;
    private javax.swing.JLabel _Label_valueDisplayed;
    private javax.swing.JList _List_Variables;
    private javax.swing.JPanel _Panel_SelectedItemInfo;
    private javax.swing.JScrollPane _ScrollPane_InfoRacks;
    private javax.swing.JScrollPane _ScrollPane_List;
    private javax.swing.JTextArea _TextArea_Info;
    private javax.swing.JTextField _TextField_UoM;
    private javax.swing.JTextField _Textfield_Name;
    // End of variables declaration//GEN-END:variables
}
